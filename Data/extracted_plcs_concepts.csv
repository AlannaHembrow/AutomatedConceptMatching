,name,description
0,ProxyItemSelect,"A ProxyItemSelect is an abstract generalization of instances that are
               either ExternalItems or ExternalOwlObjects. "
1,LocalizedString," A LocalizedString is a text based string. The language in which the the
            string is expressed is optionally identified. "
2,DataContainer," A DataContainer is an abstract generalization of the root element of a
            data file. Only non-abstract specializations of the DataContainer can be instantiated.
         "
3,PlcsDataContainer," A PlcsDataContainer is a specialization of the abstract DataContainer
            element. "
4,Activity," An Activity is the identification of the occurrence of an action that
            has taken place, is taking place, or is expected to take place in the future. The
            procedure executed during an Activity is identified by the ActivityMethod that is
            referred to by the chosenMethod attribute. Change, distilling, design, a process to
            drill a hole, and a task such as training someone, are examples of activities. NOTE:
            Status information identifying the level of completion of each activity may be provided
            within an instance of StateObserved. NOTE: The items that are affected by an Activity,
            for example as input or output, may be identified within an instance of
            ActivityAssignment. "
5,ActivityActual," An ActivityActual is a specialization of Activity. It is a record of
            the occurrence of an Activity. The ActivityActual is related through an
            ActivityHappening to the Activity of which it is an occurrence. The existence of an
            ActivityActual instance means that the ActivityActual has commenced. NOTE: A
            DateTimeAssignment classified as ""start date"" should assign a date to the ActivityActual
            to record when the activity started. NOTE: A date and time may be assigned to the
            activity with role ""end date"" to record when the activity finished. In general, the
            absence of this assignment cannot be used to infer that the activity is continuing, only
            that the end of the activity has not yet been recorded. NOTE: A more detailed history of
            the progress of an activity may be recorded by applying states to the activity, but the
            meaning of these states must be defined through local business rules.
         "
6,ActivityAssignment," An ActivityAssignment is a specialization of an AssignmentObject that
            represents the assignment of Activity instances to instances that are specializations of
            ActivityAssignmentSelect. NOTE: The meaning of the assignment is determined by
            classification which is identified by the AssignmentObject property. The possible
            classifications are subclasses of . NOTE: This entity should not be used to represent
            the association of an activity with the organizations that are responsible for its
            execution or its management. That kind of information can be represented with instances
            of OrganizationOrPersonInOrganizationAssignment "
7,ActivityHappening," An ActivityHappening is a specialization of ActivityRelationship. It is
            a relationship between the definition of an activity (ActivityHappening) and its actual
            occurrence (ActivityHappening). NOTE: Many ActivityActuals may be realizations of a
            single Activity. A single defined check (e.g. an oil-check) is actually performed on
            many occasions or vehicles. NOTE: A single ActivityActual may realize several
            activities. A single actual servicing activity includes several checks and repairs (e.g.
            an oil-check and a tyre-replacement). "
8,ActivityMethod," An ActivityMethod is a way to carry out an Activity. NOTE: There may be
            more than one method for producing a required result. NOTE: This definition may be used
            to characterize a way to resolve a request for action. The concept of action request is
            represented by WorkRequest. "
9,ActivityMethodAssignment,"An ActivityMethodAssignment is an association of an ActivityMethod with
            product or activity data. "
10,ActivityMethodRealization," An ActivityMethodRealization is a specialization of an
            AssociationObject.Â  It is a further specification of how an activity method is to be
            performed with the ActivityMethod. NOTE: More than one specification can be associated
            with the same ActivityMethod. For a given planned activity there may be a task
            specification, a statement of how task performance is to be logged and a schedule that
            all apply. "
11,ActivityMethodRealizationRelationship," An ActivityMethodRealizationRelationship is a specialization of an
            RelationshipObject that is a relationship between two instances of
            ActivityMethodRealization. NOTE: The meaning of the relationship is determined by
            classification which is identified by the ActivityMethodRealizationRelationship
            property. The possible classifications are subclasses of . NOTE: An
            ActivityMethodRealizationRelationship may be used to specify sequencing and other
            constraints between different realizations for the same ActivityMethod.
         "
12,ActivityMethodRelationship," An ActivityMethodRelationship is a specialization of an
            RelationshipObject that is a relationship between two instances of ActivityMethod. NOTE:
            The meaning of the relationship is determined by classification which is identified by
            the RelationshipObject property. The possible classifications are subclasses of .
         "
13,ActivityRelationship," An ActivityRelationship is a specialization of an RelationshipObject
            that is a relationship between two instances of Activity. NOTE: The meaning of the
            relationship is determined by classification which is identified by the
            RelationshipObject property. The possible classifications are subclasses of . The
            activity required to complete a work order, may be decomposed into a series of
            activities. Their corresponding instances would be related using instances of the
            ActivityRelationship entity. "
14,Address,"An Address is the information that locate persons or organizations. It
            provides location details for communication via postal mail, telephone, facsimile, telex
            or electronic mail. "
15,AddressAssignment," An AddressAssignment is a specialization of an AssignmentObject that
            represents the association of an Organization or a PersonInOrganization with an Address.
            NOTE: The meaning of the assignment is determined by classification which is identified
            by the AssignmentObject property. The possible classifications are subclasses of .
         "
16,AddressBasedLocationRepresentation,"An AddressBasedLocationRepresentation is a specialization of
            LocationRepresentation specified by its postal identification. "
17,AdvisoryNote,"An AdvisoryNote is the link between a task element with an advisory task
            step. "
18,AdvisoryTaskStep,"An AdvisoryTaskStep is a type of TaskStep. It conveys information. NOTE:
            Some TaskMethods may not require any action to be undertaken. ""Beware of hot exhausts"",
            ""do not use tool X this way"" and similar messages. "
19,AlternatePartRelationship,"An AlternatePartRelationship is a specialization of
            AlternateProductRelationship where the alternate and base products are parts.
         "
20,AlternateProductRelationship,"An AlternateProductRelationship is an association between two instances
            of Product. It specifies that any version of the AlternateProductRelationship, may be
            used in place of any version of the baseProduct. The relationship established by the
            AlternateProductRelationship is not symmetric: if B is an alternate product for A, A is
            not implied to be an alternate product for B. NOTE: If a product is an alternate for
            another product, it is understood that there is no interest to keep track of which
            product, the base or any alternates specified, is used as a particular instance of the
            base product within a product structure. NOTE: An organization may track design changes
            for a base part, and establish effectivity conditions for the use of that base part in
            various assemblies to be manufactured. The use of an alternate product implies that an
            organization does not specify any particular version of the alternate product nor
            establish effectivities relating to it. NOTE: An AlternateProductRelationship may relate
            products of any kind, provided both related instances of Product identify products of
            the same kind, for example part-part or document-document. NOTE: An
            AlternateProductRelationship for which the baseProduct is an assembly involves that the
            entire product structure of the alternateProduct may be used in place of the baseProduct
            and its product structure. Two bolts of the same size are products. One bolt has a
            square head and the other has a hexagonal head. The two bolts are considered equivalent
            with respect to form, fit, and function: they both have sufficiently close physical
            shape, they take up the same space when used, and they both serve to fasten two things
            together. Thus, one of these two bolts could be considered to be an alternate part for
            the other bolt. "
21,Analysis," An Analysis is a specialization of Product. It is produced via a
            reproducible process. NOTE: Analysis is the process of studying or examining something
            in an organized way to learn more about it, or a particular study or examination of
            something. The full range of the analysis process includes mathematical, physical
            testing, cognitive, chemical, etc. "
22,AnalysisAssignment,"An AnalysisAssignment is a specialization of a AssignmentObject that
            relates a specific version of an analysis to the item being analyzed.
         "
23,AnalysisDisciplineDefinition," An AnalysisDisciplineDefinition is a specialization of
            ProductViewDefinition. It is a definition or view of an AnalysisVersion taken from the
            perspective of the analysing organization. The AnalysisDisciplineDefinition is
            controlled by the analysing organization. The entity may be used to capture the
            definition of a particular version of an analysis at any intermediate stage of its
            development where the definition is not formally released by an organization at the
            analysis version level. It may be used to capture the various stages in the definition
            cycle of a product. If the analysis is explicitly represented by a model then the model
            is referenced from AnalysisDisciplineDefinition.definitionalRepresentations.
         "
24,AnalysisModel,"An AnalysisModel is used to support the description of analysis
            concepts. "
25,AnalysisModelObject," An AnalysisModelObject represents the results of an analysis.
         "
26,AnalysisRepresentationContext,"An AnalysisRepresentationContext defines the context for the items
            (AnalysisModelItemsSelect) used in an AnalysisModel. "
27,AnalysisVersion," An AnalysisVersion is a specialization of ProductVersion that
            identifies a particular version of an analysis. "
28,AnalysisVersionRelationship,"A AnalysisVersionRelationship is a specialization of
            ProductVersionRelationship that is used to assert an association between two versions of
            an analysis. "
29,AnalysisVersionSequence,"A AnalysisVersionSequence is a specialization of
            AnalysisVersionRelationship that is used to assert that the one analysis version (the
            successor) replaces another (its predecessor). "
30,AndStateCauseEffectDefinition,"An AndStateCauseEffectDefinition is a specialization of
            StateCauseEffectDefinition. It relates one or more causing StateDefinition entities and
            one effect StateDefinition. All the causing StateDefinition entities must exist prior to
            the single effect. "
31,ApplicationDomain," An ApplicationDomain defines the scope of applicability for a
            ViewDefinitionContext Each ApplicationDomain optionally references a data item in either
            a ExternalOwlObject or a ExternalItem that may indicate what the domain is.
         "
32,Approval,"An Approval is a formal confirmation of the quality of some activity or
            product data. "
33,ApprovalAssignment,"An ApprovalAssignment is the assignment of an Approval to activity or
            product data. "
34,ApprovalRelationship,"An ApprovalRelationship is a typed association between two instances of
            Approval. "
35,ApprovingPersonOrganization,"An ApprovingPersonOrganization is an association between an Approval and
            the organization or person and organization that has granted this approval.
         "
36,AssemblyViewRelationship,"An AssemblyViewRelationship is a specialization of
            ViewDefinitionRelationship. It identifies a possibly quantified usage of a product
            version as a component of another product version. The relationship is established
            between two ProductViewDefinitions The inherited attribute ViewDefinitionRelationship
            identifies the ProductViewDefinition of the assembly. The inherited attribute
            ViewDefinitionRelationship identifies the ProductViewDefinition of the product version
            that plays the role of component. The AssemblyViewRelationship specifies that, in the
            ProductViewDefinition of the ProductViewDefinition that is referred to as
            ViewDefinitionRelationship, it is considered that the product version that is indirectly
            identified with the ViewDefinitionRelationship attribute, is a component of the product
            version that is indirectly identified with the ViewDefinitionRelationship attribute.
            NOTE: In another context, the structure of the assembly may be described differently,
            adding, for example, an intermediate level between the products. NOTE: This entity data
            type may be used to establish assembly relationships during design or to represent the
            composition of an assembly existing in the real world. "
37,AssemblyRelationshipSubstitution,"An AssemblyRelationshipSubstitution is a relationship that indicates
            that an AssemblyViewRelationship may be substituted by another AssemblyViewRelationship.
            Both assembly relationships shall refer to the same ProductViewDefinition of the same
            assembly. NOTE: Consequently, an AssemblyRelationshipSubstitution actually specifies
            that the product version that plays the role of component in the substituteRelationship
            may be replaced by the product version that plays the role of component in the
            baseRelationship. NOTE: The instance of the substitute constituent does not require the
            same spatial relationship or the same quantity. A substitute constituent does not
            require equivalent form, fit, and function of the constituent for which it is a
            substitute. NOTE: As instances of AssemblyViewRelationship establish assembly
            relationships relevant in the definition contexts of the assembly, the substitution only
            apply in these contexts. An AssemblyRelationshipSubstitution defines a one-way
            substitution: if A is specified as a substitute for B, B is not implied to be a
            substitute for A. "
38,AssignmentObject," An AssignmentObject defines the allocation of one datatype to another.
            Only non-abstract specializations of the AssignmentObject datatype can be instantiated.
         "
39,AssignmentObjectRelationship," An AssignmentObjectRelationship is an association between two
            AssignmentObjects. NOTE: An AssignmentObjectRelationship can be used to represent a
            historical sequence of assignments. "
40,AssociationObject,"An AssociationObject is an abstract generalization of instances that
            represent an association between two sets of product or activity
            data."
41,Assumption," An Assumption is the identification of something assumed to be true
            without proof. The reason or justification for an assumption being made shall be
            represented by a JustificationAssignment being assigned to the Assumption. An activity
            is planned based on the assumption that the resource required to perform the activity is
            available at a location. The item that is assumed shall be related to the Assumption by
            an ItemAssumed "
42,AssumptionAssignment," An AssumptionAssignment is an association between an Assumption and the
            context in which the assumption is made. The following set of assumptions are relevant
            to the project. "
43,AssumptionRelationship,"An AssumptionRelationship is an association between two Assumptions.
         "
44,AttachmentSlot,"An AttachmentSlot is a specialization of Product that represents the
            position in which a part is or can be attached to a parent product. A fast jet aircraft
            has two engines. These engines are removable and interchangeable between individual
            aircraft. An attachment slot represents each installation position for an engine so as
            to ensure that an accurate record is maintained of which engines fly in which pairing on
            which aircraft for how many hours. "
45,AttachmentSlotAsPlanned,"An AttachmentSlotAsPlanned is a specialization of AttachmentSlotVersion
            that identifies an individual that is the subject of a plan to realize an
            AttachmentSlot. FlyFasterWithUs Group will buy an aircraft with serial number 1234 next
            year. The company wishes to plan the schedule for removal of engines from the aircraft
            for maintenance purposes. Instances of the AttachmentSlotAsPlanned entity data type
            allow the company to associate individual engines with the aircraft at different times
            over the planned period. "
46,AttachmentSlotAsRealized,"An AttachmentSlotAsRealized is a specialization of AttachmentSlotVersion
            that identifies an individual that is a realized AttachmentSlot. FlyFasterWithUs Group
            operates an aircraft with serial number 1234 next year. The company records which
            individual engines power the aircraft at different times during the lifetime of the
            aircraft. "
47,AttachmentSlotDefinition,"An AttachmentSlotDefinition is a specialization of ProductViewDefinition
            that identifies a view of an AttachmentSlot. An airworthiness authority requires an
            airline company to report which individual engines power the aircraft at different times
            during the lifetime of the aircraft. "
48,AttachmentSlotDesign,"An AttachmentSlotDesign is a specialization of AttachmentSlotVersion
            that identifies the design version of an attachment slot. WeMakeBigPlanes Limited
            creates design version 1.34 of the attachment slot for the starboard engine of an
            aircraft. "
49,AttachmentSlotDesignToPlanned,"An AttachmentSlotDesignToPlanned is a relationship between a design
            version of an AttachmentSlot and a planned individual that conforms to the design.
            WeMakeBigPlanes Limited plans production of aircraft serial number 1234 with a starboard
            engine attachment slot that is to conform to design version 1.34. "
50,AttachmentSlotDesignToRealized,"An AttachmentSlotDesignToRealized is a relationship between a design
            version of an AttachmentSlot and a realized individual that conforms to the design.
            WeMakeBigPlanes Limited builds aircraft serial number 1234 with a starboard engine
            attachment slot that conforms to design version 1.34. "
51,AttachmentSlotOnProduct,"An AttachmentSlotOnProduct is a relationship between a product and an
            AttachmentSlot that is a location on the product at which to install removable parts. An
            aircraft has a pylon mounting on a wing as a location at which to install various
            equipment. An instance of the AttachmentSlotOnProduct entity data type identifies which
            attachment slot corresponds to the pylon. "
52,AttachmentSlotPlannedToRealized,"An AttachmentSlotPlannedToRealized is a relationship between a realized
            individual of an AttachmentSlot and a corresponding planned individual. WeMakeBigPlanes
            Limited builds aircraft serial number 2468 with a starboard engine attachment slot that
            was previously planned. "
53,AttachmentSlotVersion,"An AttachmentSlotVersion is a specialization of ProductVersion that
            identifies a version of AttachmentSlot. NOTE: This is a generic concept of version, in
            most situations it is possible and more specific to represent a version as
            AttachmentSlotDesign, AttachmentSlotAsPlanned or AttachmentSlotAsRealized.
         "
54,AxisPlacement,"An AxisPlacement is a specialization of DetailedGeometricModelElement
            that defines a right-handed, 2D or 3D, coordinate system. If the AxisPlacement belongs
            to a 3D geometric space, the third direction of the coordinate system is defined by the
            vector product of x-axis and y-axis. An AxisPlacement may be an AxisPlacement2d or an
            AxisPlacement3d. "
55,AxisPlacement2d,"An AxisPlacement2d is a specialization of AxisPlacement.
         "
56,AxisPlacement3d,"An AxisPlacement3d is a specialization of AxisPlacement.
         "
57,AxisPlacementMapping,"An AxisPlacementMapping is a geometric transformation defined by a
            source AxisPlacement and a target AxisPlacement that results from the transformation of
            the source one. Both instances of AxisPlacement shall have the same dimensionality. The
            transformation shall be computed as the isometric transformation that maps: the origin
            of the source onto the origin of the target; the AxisPlacement of the source onto the
            AxisPlacement of the target; the AxisPlacement of the source onto the AxisPlacement of
            the target. NOTE: By construction, the determinant of the transformation matrix equals
            one. "
58,Breakdown,"A Breakdown is a specialization of Product that identifies a
            partitioning of a product into a set of related elements so as to form explicit,
            parent-child views that comprise the product elements. The parent-child view is
            represented by BreakdownElementUsage instances relating the elements in the breakdown
            that are represented by BreakdownElement instances. "
59,BreakdownContext,"A BreakdownContext is a membership relationship between a
            BreakdownElement and a Breakdown of which the element is a member. "
60,BreakdownElement," A BreakdownElement is a specialization of Product that identifies the
            elements in one or more Breakdown instances. NOTE: BreakdownElement is non-specific and
            allows for various types of product breakdown. The more specific breakdown elements are
            FunctionalElement, PhysicalElement, SystemElement, and ZoneElement. "
61,BreakdownElementDefinition," A BreakdownElementDefinition is a specialization of
            ProductViewDefinition that identifies a view of a version ( BreakdownElementVersion) of
            a BreakdownElement. NOTE: BreakdownElementDefinition is non-specific and allows for
            various types of product breakdowns. The more specific breakdown element definitions are
            FunctionalElementDefinition, PhysicalElementDefinition, SystemElementDefinition and
            ZoneElementDefinition. "
62,BreakdownElementRealization,"A BreakdownElementRealization is a specialization of
            ProductDefinitionElementRelationship that identifies a relationship between a
            BreakdownElementDefinition or a BreakdownElementUsage and an item that realizes that
            element definition or usage. A pump realizes the 'provide fuel to engine' element in a
            functional breakdown for a ship. "
63,BreakdownElementUsage,"A BreakdownElementUsage is a specialization of
            ViewDefinitionRelationship that identifies a relationship between a parent and child
            BreakdownElement. "
64,BreakdownElementVersion," A BreakdownElementVersion is a specialization of ProductVersion that
            identifies a version of a BreakdownElement. NOTE: BreakdownElementVersion is
            non-specific and allows for various types of product breakdown. The more specific
            breakdown elements are FunctionalElementVersion, PhysicalElementVersion,
            SystemElementVersion and ZoneElementVersion. "
65,BreakdownOf,"A BreakdownOf is a relationship between a Breakdown and a Product of
            which the breakdown is a view. "
66,BreakdownVersion,"A BreakdownVersion is a specialization of ProductVersion that identifies
            a version of a Breakdown "
67,CartesianPoint,"A CartesianPoint is a specialization of DetailedGeometricModelElement
            that defines a point by a list of up to 3 cartesian coordinates. "
68,CartesianTransformation2d,"A CartesianTransformation2d is a specialization of
            DetailedGeometricModelElement. It is defined in a 2D geometric space by a 2*2 matrix and
            a cartesian point. Let be: M, the 2*2 multiplication matrix of the cartesian
            transformation; A, the point of the cartesian transformation; P, a point in the
            geometric space; Q, the result of the application of the transformation to P. The
            coordinates of Q shall be obtained by the formula: Q = M*P + A "
69,CartesianTransformation3d,"A CartesianTransformation3d is a specialization of
            DetailedGeometricModelElement that is a geometric transformation defined in a 3D
            geometric space by a 3*3 matrix and a cartesian point. Let be: M, the 3*3 multiplication
            matrix of the cartesian transformation; A, the point of the cartesian transformation; P,
            a point in the geometric space; Q, the result of the application of the transformation
            to P. The coordinates of Q shall be obtained by the formula: Q = M*P + A
         "
70,CausalConsequence,"A CausalConsequence is a specialization of ViewDefinitionRelationship
            that identifies secondary effects related to or resulting from a particular
            RiskConsequence. NOTE: A CausalConsequence is considered as an aftereffect of an
            immediate CausalConsequence. "
71,Certification,"A Certification is a certificate. It asserts satisfaction of particular
            quality criteria. NOTE: Certification information can be attached to any aspect of
            product or activity data. "
72,CertificationAssignment,"A CertificationAssignment is an association of a Certification with
            activity or product data. 'certified supplier' is an example of certification that may
            be granted to an organization by its contractor. "
73,ChainBasedGeometricItemSpecificUsage,"A ChainBasedGeometricItemSpecificUsage is a specialization of
            GeometricItemSpecificUsage that represents a chain of GeometricModels in a graph of
            GeometricModels, where the undirected links in the graph can be
            GeometricCoordinateSpaces, GeometricModelRelationships, or GeometricPlacementOperations.
         "
74,Classification," A Classification is a relationship to the class that a subject is a
            member of. NOTE: The subject is represented by a Block that has a ""classifiedAs"" as a
            property of type Classification. "
75,ClassificationRelationship," A ClassificationRelationship is a specialization of an
            RelationshipObject that is a relationship between two instances of Classification. NOTE:
            The meaning of the relationship is determined by classification which is identified by
            the RelationshipObject property. The possible classifications are subclasses of .
         "
76,Collection,"An Collection is a specialization of Product that identifies a set of
            data. "
77,CollectionAssignment,"An CollectionAssignment is an association of an CollectionViewDefinition
            with the instance to which the collection has relevance. "
78,CollectionMembership,"An CollectionMembership is an association of an CollectionViewDefinition
            with an instance that represents a member of the collection. "
79,CollectionRelationship,"An CollectionRelationship is a specialization of ProductRelationship
            that represents an association between two Collection instances. "
80,CollectionVersion,"An CollectionVersion is a specialization of ProductVersion that
            represents a revision of an Collection. "
81,CollectionVersionRelationship,"An CollectionVersionRelationship is a specialization of
            ProductVersionRelationship that represents an association between two CollectionVersion
            instances. "
82,CollectionVersionSequenceRelationship,"An CollectionVersionSequenceRelationship is a specialization of
            CollectionVersionRelationship that represents a sequential association between two
            CollectionVersion instances. "
83,CollectionViewDefinition,"An CollectionViewDefinition is a specialization of ProductViewDefinition
            that represents a characterization of an CollectionVersion relevant in one or more
            application domains and for one or more life cycle stages. A set of data relevant to the
            design of the SS Titanic and a set of data relevant to the as-built description of the
            SS Titanic might be represented as two instances of CollectionViewDefinition.
         "
84,ComponentUpperLevelIdentification,"A ComponentUpperLevelIdentification is a specialization of
            AssemblyViewRelationship. It identifies a component of an assembly with respect to an
            upper level in the assembly structure. NOTE: A ComponentUpperLevelIdentification does
            not add a component in an assembly, it provides a means to further characterize a
            component with respect to an upper level assembly. A ComponentUpperLevelIdentification
            may be used to assign a property to a component that applies in the context of a
            particular upper level assembly. The identified component is the version of product,
            indirectly referred to as the ViewDefinitionRelationship of the subAssemblyRelationship.
            The upper level assembly is the version of product, indirectly referred to as the
            ViewDefinitionRelationship of the upperAssemblyRelationship. "
85,CompositionOfState,"A CompositionOfState is a specialization of state relationship and it
            relates the nature of states in relation to one another, where two or more State parts
            compose a whole State; and furthermore, whole states can become parts of yet another
            whole State. "
86,CompositionOfStateDefinition,"A CompositionOfStateDefinition is a specialization of
            StateDefinitionRelationship. It relates StateDefinition entities to one another, when
            two or more StateDefinition entities act as parts to compose a whole StateDefinition;
            and furthermore, whole StateDefinition entities can become parts of yet another whole
            StateDefinition. "
87,ConcurrentElements,"A ConcurrentElements is a specialization of StructuredTaskElement that
            comprises a set of actions to be performed during the time required for the longest
            task. No specific order is required. "
88,Condition,"A Condition is a definition of the precedent that must be fulfilled
            before a statement or relationship becomes valid. NOTE: The condition is defined as a
            text based expression that is represented by the description attribute. The parameters
            against which the condition is to be evaluated are identified by ConditionParameter. The
            target or consequence of a condition is represented by ConditionAssignment. ""If the
            engine has been running for 10000 hours then it requires a service"" is an example of a
            conditional statement. The conditional part of the statement is ""If the engine has been
            running for 10000 hours"" which is stored in definition attribute on Condition. The
            parameter or subject of the condition is ""the engine"" which is represented by a
            ConditionParameter identifying the ProductAsRealized which represents the engine. The
            consequence of the condition is ""then it requires a service"". This is represented by
            ConditionAssignment identifying the task to perform the service, a TaskMethod.
         "
89,ConditionalEffectivity," A ConditionalEffectivity is a specialization of Effectivity for which
            the domain of applicability is defined by an explicit condition. "
90,ConditionAssignment,"A ConditionAssignment is a relationship that identifies the statement or
            relationship to which a Condition applies. Condition 29 applies to the relationship
            between a Saab 9.3 car and the activity of checking the oil level on that make of car.
         "
91,ConditionEvaluation,"A ConditionEvaluation is a record of the evaluation of a Condition and
            the subsequent result. A Condition is ""If the measured value of oil pressure from gauge
            3 on a car is less than 2 bar then check the oil level"" When the condition is evaluated
            it is recorded by an instance of ConditionEvaluation. The measured value of oil pressure
            from gauge 3 on car with VIN 12345678 is 1.9 bar. Therefore the result of the evaluated
            the condition is true. "
92,ConditionEvaluationAssignment,"A ConditionEvaluationAssignment is a relationship that identifies the
            statement or relationship to which the ConditionEvaluation applies. The
            ConditionEvaluation (instance 87) is assigned to the activity of checking the oil level
            on car VIN 12345678. "
93,ConditionEvaluationParameter,"A ConditionEvaluationParameter is an identification of the product or
            activity data used in the evaluation of the Condition identified by the
            ConditionEvaluation. The measured value of oil pressure from gauge 3 on car with VIN
            12345678 (value = 1.9 bar). NOTE: The product or activity data is defined in
            ConditionEvaluationParameterSelect. "
94,ConditionParameter,"A ConditionParameter is a representation of the product or activity data
            that is used to specify a Condition. Oil pressure on gauge 3. NOTE: The product or
            activity data is defined in ConditionParameterSelect. "
95,ConditionRelationship,"A ConditionRelationship is a relation between two conditions.
         "
96,ContextualItemShape," A ContextualItemShape is a specialization of ItemShape that identifies
            the shape of a product version in the context of its use in another product version. The
            product version whose contextual shape is identified, is the product version associated
            with the ViewDefinitionRelationship of the ViewDefinitionUsage. Flexible part may have
            several shapes, each associated with a particular occurrence of the part in assemblies.
         "
97,ContextualShapeRepresentation,"A ContextualShapeRepresentation is a relationship that relates a
            ContextualItemShape and a GeometricModelRelationship. "
98,Contract,A Contract is a binding agreement. 
99,ContractAssignment,"A ContractAssignment is an association of a Contract with activity or
            product data. "
100,ContractRelationship,"A ContractRelationship is a relationship between two Contract instances.
         "
101,DatedEffectivity,"A DatedEffectivity is a specialization of Effectivity for which the
            domain of applicability is defined as an interval of time bounded by dates or events.
            The interval may be open-ended. Events may be used to bound a DatedEffectivity period,
            at planning phase. Depending on which of the DatedEffectivity and DatedEffectivity
            attributes are specified, the actual domain of time defined by a DatedEffectivity is:
            the time interval between the start and end date or event; the open time interval that
            starts at the start date or event; the open time interval that ends at the end date or
            event (i.e. the start is unknown). If the DatedEffectivity is an event that actually
            identifies a point in time that comes before the DatedEffectivity, then the actual
            domain of effectivity is empty. "
102,DateTimeAssignment," A DateTimeAssignment is a specialization of an AssignmentObject that
            represents the assignment of a date and time, DateTimeString with activity or product
            data. NOTE: The meaning of the assignment is determined by classification which is
            identified by the AssignmentObject property. The possible classifications are subclasses
            of . "
103,DecisionPoint,"A DecisionPoint is a type of StructuredTaskElement. It requires a
            decision that determines which further TaskElement is to be followed. NOTE: The
            condition on which the decision is based optionally allows a further TaskElement to be
            invoked to provide the basis for the decision. "
104,DecreasingResourceEvent," A DecreasingResourceEvent is a specialization of ResourceEvent that
            decreases the balance of a managed resource. Filling a requisition reduces an inventory.
         "
105,DefinedStateRelationship,"A DefinedStateRelationship is a relationship that links a StateAssertion
            to a StateAssessment. "
106,Descriptor," A Descriptor is a set of words that describe something. The same thing
            may have multiple descriptions associated with it. Relating both a short description and
            a long description to an operational activity or an organization, as required by the US
            DoD Architecture Framework, are examples of multiple descriptions applied to the same
            item. "
107,DescriptorRelationship," A DescriptorRelationship is a relationship between a pair of
            Descriptors "
108,DetailedGeometricModelElement,"A DetailedGeometricModelElement identifies a geometric construct. Only
            non abstract specializations of the DetailedGeometricModelElement entity data type can
            be instantiated. "
109,DigitalDocumentDefinition,"A DigitalDocumentDefinition is a specialization of DocumentDefinition.
            It identifies a collection of files that are archived on an optical computer disc,
            magnetic, electronic storage, or a combination thereof. A digital document definition
            may consist of one or many component digital files. "
110,DigitalFile,"A DigitalFile is a specialization of File. A DigitalFile contains
            computer interpretable data and is stored on an electronic device. "
111,DirectedActivity,"A DirectedActivity is a specialization of Activity. It identifies an
            activity that is governed by a WorkOrder. "
112,Direction,"A Direction is a specialization of DetailedGeometricModelElement that
            defines a 2 or 3 dimensional vector. NOTE: A Direction is not located in a geometric
            space but is used in the definition of geometric entities like AxisPlacement.
         "
113,DistributionByValue," A DistributionByValue is a specialization of ProbabilityDistribution
            that explicitly lists pairs of random variable values and function values. NOTE:
            DistributionByValue is used where there is no named distribution which can be used to
            identify the distribution, for example, when the distribution is derived from
            observation. "
114,Document,"A Document is a specialization of Product used to identify documentation
            data that is under configuration change management. "
115,DocumentAssignment,"A DocumentAssignment is a mechanism to associate a document with product
            data, where the assigned document provides information about the data with which it is
            associated. "
116,DocumentDefinition," A DocumentDefinition is a specialization of ProductViewDefinition that
            is a DocumentVersion in a particular format. NOTE: A DocumentVersion may have more than
            one representation. A version of a logical document, which contains a shape model, may
            be represented in the native formats of different CAD systems. Each DocumentDefinition
            is a DigitalDocumentDefinition or a PhysicalDocumentDefinition. NOTE: Aspects of the
            representation may not be known at the time the identification is established.
         "
117,DocumentDefinitionRelationship,"A DocumentDefinitionRelationship is a relationship between two instances
            of DocumentDefinition. "
118,DocumentVersion,"A DocumentVersion is a specialization of ProductVersion A
            DocumentVersion identifies a particular version of a document. "
119,Effectivity," An Effectivity is the identification of a domain of applicability.
            NOTE: Instances of Effectivity may be applied to any kind of product or activity data.
         "
120,EffectivityAssignment,"An EffectivityAssignment is the association of an Effectivity with
            product or activity data. "
121,EffectivityRelationship,"An EffectivityRelationship is an association between two instances of
            Effectivity. The meaning of the relationship is represented with the relationType
            attribute. "
122,ElementConstraint,"An ElementConstraint is a specialization of TaskElementRelationship that
            signifies a constraint between TaskElements. The constraint may only apply within the
            context of a TaskMethod or TaskElement, specified as the context. "
123,EndTask,"An EndTask is a type of TaskElement. It signifies a point at which to
            end the task. "
124,Envelope,"An Envelope is an historical record of the transmission of a Message. It
            is used to record the audit data for sending and acknowledging a Message. Because it is
            an historical record, each Envelope is only used once, and so is not versioned.
         "
125,EnvelopeRelationship," An EnvelopeRelationship is an association of one Envelope with another.
            NOTE: The most obvious use of the association is to link an Envelope to its
            acknowledgements. "
126,EnvironmentAssignment," A EnvironmentAssignment is an assignment of a product to the
            environment in which it operates or is supported. "
127,EnvironmentDefinition,"An EnvironmentDefinition is a specialization of Product that is used to
            identify the definition of typical environment in which a product is to be, has been or
            is planned to be deployed in, operated in, or supported in. "
128,EnvironmentDefinitionVersion,"A EnvironmentDefinitionVersion is a specialization of ProductVersion
            that identifies a particular version of an EnvironmentDefinition. "
129,EnvironmentDefinitionView," A EnvironmentDefinitionView is a specialization of
            ProductViewDefinition that provides a view of a version of an environment definition
            relevant for one or more application domains. This view collects the characteristics
            that define an environment. NOTE: The characteristics include the resources available,
            the locations in which the product is to operate as well as climatic conditions such
            temperature ranges. "
130,EnvironmentViewDefinitionRelationship,"A EnvironmentViewDefinitionRelationship is a specialization of
            ViewDefinitionRelationship that represents an association between two
            EnvironmentDefinitionView instances. "
131,Evidence,"An Evidence is a collector of items used together to provide a single
            piece of evidence within a validation or verification. For example a document and its
            approval by a customer may be used together to provide evidence of customer acceptance.
         "
132,ExchangeContextClassLibrary," A ExchangeContextClassLibrary is a representation of a universal
            resource identifier for the OWL reference-data library that provides the context for an
            exchange of data. NOTE: Each data exchange takes place in the context of a single OWL
            class library that references any other OWL libraries that are required.
         "
133,ExitLoop,"An ExitLoop is a type of StructuredTaskElement. It signifies a point at
            which to exit from a loop. "
134,ExpandedUncertainty,"An ExpandedUncertainty is a specialization of StandardUncertainty that
            specifies the factor of an uncertainty. "
135,ExperienceGained,"An ExperienceGained is a relationship between an ExperienceInstance and
            a person or organization. "
136,ExperienceInstance,"An ExperienceInstance is a particular episode of contact with and/or
            observation of facts or events which contributes to the accumulation of knowledge or
            skill. Changing the exhaust system on a car. 2 years work on same type of milling
            machine. 100 flying hours in a Tornado jet. 5 years as Workshop Manager. The nature,
            duration and worth of the ExperienceInstance can be described using assigned properties
            or by referring to activities or tasks. "
137,ExperienceType,"An ExperienceType is a category or class of experience. welding
            mechanical design flying "
138,ExperienceTypeRelationship,"An ExperienceTypeRelationship is used to relate a compound experience to
            its component experiences. Ten years programming experience made up of five years C++
            programming experience and five years Java programming experience. "
139,ExternalAnalysisModel,"An ExternalAnalysisModel is a specialization of AnalysisModel whose
            content is provided in an external file. "
140,ExternalClass," An ExternalClass defines a relationship between a datatype and an
            non-OWL reference-data class of which instances of the datatype are members.
         "
141,ExternalGeometricModel,"An ExternalGeometricModel is a specialization of 3D GeometricModel whose
            content is provided in an external file. The set of items of the ExternalGeometricModel
            contains only one element that shall be an AxisPlacement. This AxisPlacement specifies
            the reference location and orientation with respect to which placement of the
            ExternalGeometricModel in other GeometricModels shall be defined. "
142,ExternalItem," An ExternalItem is the representation of a reference to an object or
            item that is external to the data exchange file. The location of a digital file in a
            file system. A section in a document. A definition. "
143,ExternalOwlClass," An ExternalOwlClass defines a relationship between a datatype and an
            OWL reference-data class of which instances of the datatype are members. The OWL class
            is defined and managed in an ontology external to the data exchange file.
         "
144,ExternalOwlObject," An ExternalOwlObject states that a block instance is the same as an OWL
            reference-data item. NOTE: This capability is similar in nature to the ProxyObject
            built-in property in the World Wide Web Consortium Web Ontology Language, available from
            their Web site. ProxyObject indicates that two individuals or classes have the same
            'identity'. "
145,ExternalPropertyDefinition," An ExternalPropertyDefinition is a reference to a property definition
            that is defined externally to the exchange file. A Property definition is the definition
            of a particular quality or feature of a product or activity data. A Property definition
            may reflect physics or arbitrary user defined measurements. Colour is a property of
            product and is defined by a red, green and blue values. "
146,ExternalTypeQualifier," An ExternalTypeQualifier is a reference to the specification of the
            type of a datum that is defined externally to the exchange file. "
147,ExternalUnit,An ExternalUnit is a unit quantity. 
148,File,"A File is a file stored on a computer system or in a stack of
            non-digital documents. "
149,FileRelationship,"A FileRelationship is a relationship between two instances of File. A
            service manual may contain graphics for explanatory reasons. In this case, the File
            instances that contain the graphics are referenced as related from the File instance
            that contains the body of the service manual with DocumentDefinitionRelationship
            'reference'. "
150,FunctionalBreakdown,"A FunctionalBreakdown is a specialization of Breakdown that identifies a
            partitioning of a product into a set of related functional elements so as to form
            explicit structural views that comprise the product elements. The composite - component
            view is represented by FunctionalElementUsage instances relating the functional elements
            in the breakdown which are represented by FunctionalElements. A functional breakdown
            provides a decomposition of an aircraft in terms of high-level functional processes such
            as flight, taxiing and at rest all the way down to low-level processes such as detect
            on-board fuel level, move tail rudder and provide standard tow attachment point.
         "
151,FunctionalBreakdownContext,"A FunctionalBreakdownContext is a specialization of BreakdownContext
            that is an association of a FunctionalElement to a FunctionalBreakdown of which the
            functional element is a member. A function 'provide load lifting capability' is member
            of the functional breakdown of a helicopter. "
152,FunctionalBreakdownVersion,"A FunctionalBreakdownVersion is a specialization of BreakdownVersion
            that identifies a version of a FunctionalBreakdown "
153,FunctionalElement,"A FunctionalElement is a specialization of BreakdownElement that
            identifies the elements in one or more FunctionalBreakdown instances.
         "
154,FunctionalElementDefinition,"A FunctionalElementDefinition is a specialization of
            BreakdownElementDefinition that identifies a view of a version (
            FunctionalElementVersion ) of a FunctionalElement "
155,FunctionalElementUsage,"A FunctionalElementUsage is a specialization of BreakdownElementUsage
            that is an association of a functional element to another functional element that is a
            constituent. FunctionalElement. "
156,FunctionalElementVersion,"A FunctionalElementVersion is a specialization of
            BreakdownElementVersion that identifies a version of a FunctionalElement
         "
157,FunctionValuePair,"A FunctionValuePair is a single random variable/value pair, thus
            defining a single point on the distribution curve of a numerically defined distribution.
            The distribution function for the tossing of two coins uses the number of heads as the
            random variable and the probability as value of the function, and has the form of a list
            of three pairs ((0, 0.25), (1, 0.5), (2, 0.25)) - 0, 1 and 2 being the random variable
            values, 0.25, 0.5 and 0.25 being the probability values. "
158,GeometricCompositionWithOperatorTransformation,"A GeometricCompositionWithOperatorTransformation is a specialization of
            GeometricRelationshipWithOperatorTransformation. "
159,GeometricCompositionWithPlacementTransformation,"A GeometricCompositionWithPlacementTransformation is a specialization of
            GeometricRelationshipWithPlacementTransformation. "
160,GeometricCoordinateSpace,"A GeometricCoordinateSpace is a type of ChainedGeometricModelLinkSelect
            that defines a coordinate space where geometric elements can be defined. It is either
            two-dimensional or three-dimensional. There shall be at least two units specified for
            the GeometricCoordinateSpace: one length unit and one plane angle unit. The length unit
            applies to each coordinate direction. The length unit millimetre and the angle unit
            radian are examples of units that may assigned to a GeometricCoordinateSpace. NOTE: The
            origin for coordinate values is implicitly defined as being the cartesian point whose
            coordinates are all zero. "
161,GeometricItemSpecificUsage," A GeometricItemSpecificUsage is an identification of a
            DetailedGeometricModelElement within a GeometricModel or an ExternalGeometricModel as
            being the element that describes a ShapeElement or ShapeElementRelationship of an
            ItemShape that is described by the GeometricModel or an ExternalGeometricModel. In an
            application protocol, an instance of GeometricModel describes the ItemShape of a
            product. One element of the GeometricModel - a curve - represents the boundary of a hole
            that is a ShapeElement in the product. This entity data type may be used to state that
            the curve describes the hole, in the context of the entire GeometricModel describing the
            shape of the product. "
162,GeometricModel," A GeometricModel is a model comprising geometric constructs. The
            GeometricModel is founded in a GeometricCoordinateSpace. The items of a GeometricModel
            are instances of DetailedGeometricModelElement. "
163,GeometricModelRelationship,"A GeometricModelRelationship is a type of
            ChainedGeometricModelLinkSelect. "
164,GeometricModelRelationshipWithTransformation,"A GeometricModelRelationshipWithTransformation is a specialization of
            GeometricModelRelationship. A GeometricModelRelationshipWithTransformation may be a
            GeometricRelationshipWithPlacementTransformation or a
            GeometricRelationshipWithOperatorTransformation "
165,GeometricOperatorTransformation,"A GeometricOperatorTransformation is a specialization of
            GeometricPlacementOperation. "
166,GeometricPlacement,"A GeometricPlacement is a specialization of GeometricPlacementOperation.
         "
167,GeometricPlacementModel,"A GeometricPlacementModel is a specialization of GeometricModel.
         "
168,GeometricPlacementOperation,"A GeometricPlacementOperation is a specialization of
            DetailedGeometricModelElement. A GeometricPlacementOperation may be a GeometricPlacement
            or a GeometricOperatorTransformation. "
169,GeometricRelationshipWithOperatorTransformation,"A GeometricRelationshipWithOperatorTransformation is a specialization of
            GeometricModelRelationshipWithTransformation. "
170,GeometricRelationshipWithPlacementTransformation,"A GeometricRelationshipWithPlacementTransformation is a specialization
            of GeometricModelRelationshipWithTransformation. "
171,GlobalLocationRepresentation,"A GlobalLocationRepresentation is a type of LocationRepresentation
            specified using geographic means in the global system and values, which could be
            physical or political geographic values. "
172,Hardcopy,"A Hardcopy is a specialization of File that represents a non-digital
            document. An actual stack of paper consisting of one or more sheets, on which some
            product data is written, printed or plotted. "
173,HierarchicalInterfaceConnection," A HierarchicalInterfaceConnection is a specialization of
            InterfaceConnection that provides an interconnection between components at different
            levels in an assembly. Each connection point in the assembly is represented by a
            InterfaceConnectorOccurrence. An appliance such as a television has a power lead and
            attached plug. The plug and power lead could be represented as an assembly of parts such
            as the plug pins and wires. Each connection point of the pins and wires in the assembly
            is represented by a InterfaceConnectorOccurrence and an instance of the
            HierarchicalInterfaceConnection entity data type identifies the connection of the pins
            (the parts) to the plug (the assembly) in the assembly. "
174,Identifier," An Identifier provides the identifying name or code for the activity or
            product data. "
175,IdentifierRelationship," A IdentifierRelationship is a relationship between a pair of
            Identifiers. NOTE: The meaning of the relationship is determined by classification which
            is identified by the RelationshipObject property. The possible classifications are
            subclasses of . ISO is an acronym for ""International Standard Organization"". When ISO
            and ""International Standard Organization"" are used as identifiers for the ISO
            organization, they may be related to indicate that ISO is the acronym for ""International
            Standard Organization"". "
176,IncreasingResourceEvent," A IncreasingResourceEvent is a type of ResourceEvent that increases the
            balance of a managed resource. Purchasing new stock increases an inventory.
         "
177,InformationRight," An InformationRight is a definition of what may or may not be done with
            information in the sense of legal rights and obligations. NOTE: This a general purpose
            definition of a right that may be applied to many things. The usage of the
            InformationRight is represented by InformationUsageRight. The application of that right
            to information is represented by InformationUsageRightAssignment. Copyright is an
            InformationRight. For the purposes of developing a new system, details of government
            furnished equipment may be made available to a particular project team. The team may
            copy and use the information internally, but may not pass it on, either to a third part,
            or to another team, and must destroy the information at the end of the contract.
         "
178,InformationUsageRight,"An InformationUsageRight is an application an InformationRight to a
            particular usage context. NOTE: One view of the distinction between an InformationRight
            and an InformationUsageRight is that the InformationRight represents a standard clause
            in a contract, whereas an InformationUsageRight represents the fact that the clause is
            used in a particular contract. NOTE: The context for the usage can be defined through
            the contract which defines the right, the organization that grants the right, the person
            or organization which is granted the right, and any dates such as the starting or ending
            dates for the right. The meaning of each association is identified through the roles of
            the assignments, and these are defined through reference-data. NOTE: The Approval of an
            InformationUsageRight carries the meaning that the right is granted to all information
            items in the relevant context, as opposed to the approval of an
            InformationUsageRightAssignment which is limited to particular items. NOTE:
            InformationUsageRight provides a mechanism for recording significant rights within a
            product database. The legal significance of the presence or absence of a right is
            outside the scope of this part of ISO 10303 "
179,InformationUsageRightAssignment,"An InformationUsageRightAssignment is an application of a particular
            usage right to a set of items. NOTE: If an approval is applied to this entity, it
            carries the meaning that the particular set of items is approved for the given usage.
            This approval generally indicates that the approval is exceptional, for example, where
            the information belongs to another project, and that project agrees to share some
            particular items of information. There is a further implication that the set of entities
            should not be changed once the approval is given. "
180,InformationUsageRightRelationship,"An InformationUsageRightRelationship is the relationship of one
            InformationUsageRight to another. Where one InformationUsageRight supercedes another,
            then the original right is pointed to by the relating attribute, its replacement by the
            related attribute, and the relationType attribute takes the value ""supercedes"".
         "
181,InterfaceConnection," A InterfaceConnection is an interconnection between a connected pair of
            InterfaceConnectorOccurrences. Each InterfaceConnectorOccurrence represents the place
            where a product used in an assembly can interact with other products in the assembly. An
            appliance such as a television has a power lead and attached plug. The plug and power
            lead could be represented as an assembly of parts such as the plug pins and wires. Each
            connection point of the pins and wires in the assembly is represented by a
            InterfaceConnectorOccurrence and an instance of the InterfaceConnection entity data type
            identifies the connection of the pins to the wires in the assembly. "
182,InterfaceConnector," An InterfaceConnector is a specialization of Product that identifies a
            part of a product with which one or more other products or the environment interacts.
            NOTE: This is sometimes referred to as a ""port"". A computer has a socket to which to
            connect a network cable. An instance of the InterfaceConnector entity data type
            identifies the role of the socket in the interface and is the subject of a specification
            that defines the necessary geometrical and electrical attributes to ensure a functioning
            interface between the computer and network hardware. "
183,InterfaceConnectorAsPlanned,"An InterfaceConnectorAsPlanned is a specialization of
            InterfaceConnectorVersion that identifies an individual that is the subject of a plan to
            realize an InterfaceConnector. Company Acme Limited is planning to produce an aircraft
            with serial number 1234 next month. This aircraft has connectors on each engine for fuel
            pipes. The company wishes to plan when each connector will be realized and then identify
            a date on which an inspector can test all the realized connectors. "
184,InterfaceConnectorAsRealized,"An InterfaceConnectorAsRealized is a specialization of
            InterfaceConnectorVersion that identifies an individual that is a realized
            InterfaceConnector. Company WeFlySafest Corporation owns and operates an aircraft with
            serial number 1234. When landing at Heathrow airport, the pilot reports a loss of fuel
            pressure on engine number 4 with serial number A9876 and recommends that an inspector
            tests the realized connector on the engine. "
185,InterfaceConnectorDefinition,"An InterfaceConnectorDefinition is a specialization of
            ProductViewDefinition that identifies a view of an InterfaceConnectorVersion. A
            reliability engineer assesses the likely failure modes of design version 3.8 for the
            connector between a brake unit and the hydraulic control system. The engineer generates
            a set of data that is a specific view of the connector. An instance of the
            InterfaceConnectorDefinition entity data type collects these data together.
         "
186,InterfaceConnectorDesign,"An InterfaceConnectorDesign is a specialization of
            InterfaceConnectorVersion that identifies a design version of an InterfaceConnector.
            BuildAWidget Incorporated creates design version 2.10 for an electrical supply
            connector. "
187,InterfaceConnectorDesignToPlanned,"An InterfaceConnectorDesignToPlanned is a relationship between a design
            version of an InterfaceConnector and a planned individual that is to conform to the
            design. BuildAWidget Incorporated plans production of pump serial number 30301 with an
            electrical supply connector that is to conform to design version 2.10.
         "
188,InterfaceConnectorDesignToRealized,"An InterfaceConnectorDesignToRealized is a relationship between a design
            version of an InterfaceConnector and a realized individual that conforms to the design.
            BuildAWidget Incorporated builds pump serial number 30301 with an electrical supply
            connector that conforms to design version 2.11. "
189,InterfaceConnectorOccurrence,"A InterfaceConnectorOccurrence is an occurrence of a
            InterfaceConnectorDefinition. The InterfaceConnectorOccurrence represents the place
            where a product used in an assembly can interact with other products in the assembly.
            The interaction is represented by a InterfaceConnection. "
190,InterfaceConnectorPlannedToRealized,"An InterfaceConnectorPlannedToRealized is a relationship between a
            realized individual of an InterfaceConnector and a corresponding planned individual.
            BuildAWidget Incorporated builds pump serial number 30302 with an electrical supply
            connector that was previously planned. "
191,InterfaceConnectorVersion,"An InterfaceConnectorVersion is a specialization of ProductVersion that
            identifies a version of an InterfaceConnector. "
192,InterfaceDefinitionConnection,"A InterfaceDefinitionConnection is an interconnection between a
            connected pair of InterfaceConnectorDefinitions or, if the point of interconnection is
            not specified, the interconnection between a pair of views ( ProductViewDefinitions) on
            products A socket in the wall provides access to the domestic electricity supply. An
            appliance such as a television has a power lead and plug that fits into the socket. An
            instance of the InterfaceDefinitionConnection entity data type identifies this fitting
            of the plug into the socket. "
193,InterfaceDefinitionFor,"An InterfaceDefinitionFor is a relationship between an
            InterfaceSpecification and an item that conforms to the specification. The infrared
            transmitter in a television remote control conforms to the specification that has the
            identifier 2345/XYZ/001. An instance of the InterfaceDefinitionFor entity data type is
            necessary to identify this relationship. "
194,InterfaceSpecification,"An InterfaceSpecification is a specialization of Product that provides a
            definition of necessary attributes for one or more items that participate in an
            interface. BSI develops a standard for connecting domestic electrical equipment to the
            electricity supply. "
195,InterfaceSpecificationDefinition,"An InterfaceSpecificationDefinition is a specialization of
            ProductViewDefinition that provides a view of an InterfaceSpecification. When developing
            a BSI standard for connecting domestic electrical equipment to the electricity supply,
            collected comments from experts form a new view on a version of the standard.
         "
196,InterfaceSpecificationVersion,"An InterfaceSpecificationVersion is a specialization of ProductVersion
            that identifies a version of an InterfaceSpecification. In 1999, BSI issues a new
            version of a standard for connecting domestic electrical equipment to the electricity
            supply. "
197,InZone,"An InZone is a relationship between a ZoneElement and an item that
            exists within the zone. A pump is in the starboard engine room of a ship.
         "
198,ItemAssumed," An ItemAssumed is an association between an Assumption and the item
            that is being assumed. A facility is assumed to exist at a given location. The facility
            shall be represented by a ResourceItemAssignment, the location by a Location, and the
            existence of the facility at the location, by a LocationAssignment assigning a location
            to the resource. "
199,ItemDesignAssociation,"An ItemDesignAssociation is the association of a ProductConfiguration
            with a ProductViewDefinition or a ProductVersion. It specifies the design that
            corresponds to the ProductConfiguration. If the design is a ProductViewDefinition, the
            ItemDesignAssociation represents the statement that, in the considered definition
            context, the product version, that is, the ProductViewDefinition is a valid way to
            implement the ProductConfiguration. NOTE: This association might not be valid in all
            definition contexts of the product version. If the design is a ProductVersion, the
            ItemDesignAssociation represents the statement that, in all definition contexts, the
            ProductVersion is a valid way to implement the ProductConfiguration. NOTE: The
            association might not be valid for other versions of the product. "
200,ItemShape," AnItemShape is a specialization of an ItemShapeObjectÂ  that represents
            the shape of a ShapeableItemSelect. "
201,ItemShapeObject," AnItemShapeObject is an abstract generalization of instances that
            represents the shape of a ShapeableItemSelect. NOTE: Only non-abstract specializations
            of the ItemShapeObject can be instantiated. "
202,ItemUsageEffectivity,"An ItemUsageEffectivity is an effectivity domain that constrains the use
            of a product with or within another product, in the context of a ProductConfiguration.
            The effectivityDomain attribute identifies a domain of effectivity. The
            itemUsageRelationship attribute identifies a relationship which characterizes the use of
            the product with or within another product. This relationship may be an
            assembly-component relationship or a make-from relationship. The resolvedConfiguration
            attribute identifies an association between a ProductConfiguration and a product that
            implements it. This attribute establishes the context in which the itemUsageRelationship
            is considered and constrained. When the effectivity domain is a range of serial numbers,
            the serial numbers considered are those of the ProductConfiguration. When the
            effectivity domain is defined using a production lot number, the production lot
            considered is one of the ProductConfiguration. When the effectivity domain is an
            interval of time, the interval of time considered is related to the production of the
            ProductConfiguration. NOTE: When no effectivity constraint is applied to a
            ViewDefinitionUsage, the validity or applicability status of this ViewDefinitionUsage is
            unknown. "
203,Justification,"A Justification is the identification and description of the reasons for
            something. Justification entities may be associated with the data to which they apply. A
            justification may be provided for a product design. Similarly, a justification may be
            provided for why an activity is needed or was undertaken. "
204,JustificationAssignment,"A JustificationAssignment is the association between a Justification and
            the item for which the Justification is provided. The item can be an activity or a
            product design. "
205,JustificationRelationship,"A JustificationRelationship is an association between two
            Justifications. "
206,JustificationSupportAssignment,"A JustificationSupportAssignment is the association between a
            Justification and the item providing evidential support for the Justification The
            support item can be the results from an analysis, a report, or professional judgment.
         "
207,LifeCycleStage," A LifeCycleStage represents a point, period, or step in a lifecycle. It
            is referenced by ViewDefinitionContext. "
208,Location,"A Location is a place or position where an activity or event can occur
            or a product or resource can exist. "
209,LocationAssignment,"A LocationAssignment is a relationship between a product, event, or
            person and a location. There may be distinct assignment for each qualification. for
            example planned, scheduled or actual. Each assignment may have a start and end date or
            time. A location may have multiple assignments. "
210,LocationRelationship,"A LocationRelationship is a relationship between two locations. Location
            B, which is in reference to location A or Location B (UK), which is a refinement of
            Location A (Europe). "
211,LocationRepresentation,"A LocationRepresentation is a means of representing a location.
         "
212,LoopingElement,"A LoopingElement is a specialization of TaskElement. It invokes a
            specified number of repetitions of a further TaskElement. "
213,LotEffectivity,"A LotEffectivity is a specialization of Effectivity for which the domain
            of applicability is defined as a given batch of items. "
214,MakeFromRelationship,"A MakeFromRelationship is a specialization of ViewDefinitionUsage
            established between two instances of PartViewDefinition. It specifies that, in the
            context of the definition of the relating part version, the relating part version is
            considered as resulting from the manufacturing transformation of the related part
            version. NOTE: The related part version may identify a raw material or a semi-finished
            part. "
215,ManagedResource," A ManagedResource is a representation of a resource that is provided
            with resource management capabilities. The role of a managed resource is determined by
            classification. A managed resource can be classified as ""Stock line"".
         "
216,ManagedResourceRelationship," A ManagedResourceRelationship is an association between two managed
            resources. The meaning of the relationship is determined by classification. A managed
            resource relationship can be classified as ""Alternative"" or ""Preferred"".
         "
217,Market,"A Market is the identification of a marketing segment for products.
         "
218,MeasureQualification,"A MeasureQualification is a means to provide information about
            measurements in which there is an associated uncertainty. The uncertainty may be
            specified as precision, qualitative uncertainty, or expanded uncertainty, and the type
            of the related datum shall be included. The uncertainty is defined in clause 2 of ""The
            Guide to the Expression of Uncertainty in Measurement"". "
219,Message,"A Message is a collection of information, brought together by an
            originator (the message definer) for some particular purpose, generally the fulfillment
            of a process. A Message is an historical record, intended to be sent using an Envelope
            and in consequence, is not versioned. NOTE: The same Message can be sent several times
            using different Envelope. Once it has been sent once, it cannot be further changed.
            However it should not remain unsent, since that is to confuse its functions and
            therefore its meaning with other entities such as one of the types of document.
         "
220,MessageRelationship,"A MessageRelationship is a link between two related messages. The
            meaning of the association depends on MessageRelationship.role. If Message=2 replaces
            Message=1, then MessageRelationship.related points to Message=2 and
            MessageRelationship.relating points to Message=1 with
            MessageRelationship.role=""replaces"". "
221,NextAssemblyViewUsage,"A NextAssemblyViewUsage is a specialization of AssemblyViewRelationship.
            It establishes a relationship between a component and its immediate parent assembly in a
            product structure. "
222,NumericalContext," A NumericalContext is a context in which a NumericalValue is recorded.
            The context may represent the organization, technique or system used to establish the
            NumericalValue. "
223,NumericalValue,"A NumericalValue is a specialization of a ValueWithUnit representing a
            quantity expressed with a numerical value and a unit. "
224,Observation,"An Observation is an historical record of something that has occurred
            during the life of a product or its support environment. Its use is restricted to
            observations not directly represented in the data model, and should not be used where
            some other reporting data structure is defined. "
225,ObservationAssignment," An ObservationAssignment is an association of an Observation with any
            item that an observation can be made about, or any item that can be used as part of the
            observation. "
226,ObservationConsequence," An ObservationConsequence is an association of an observation to the
            consequences that follow from it, where those consequences are in the form of a
            WorkRequest. NOTE: One of the uses of ObservationConsequence is to close one of the
            feedback loops from the use of a product to requests for its enhancements.
         "
227,ObservationRelationship," An ObservationRelationship is a relationship between two observations.
            The nature of this relationship is identified by the role. Where there is a structural
            relationship between Observation, the semantics of the structure are identified by the
            classification of the ObservationRelationship against reference-data. The Observation of
            a persistent fault is composed of a series of Observation of occurrences of the same
            fault. That is, ObservationRelationship.related points to the composite Observation,
            while ObservationRelationship.relating points to one actual Observation of the
            occurrence. The ObservationRelationship.role of the relationship is ""observed instance"",
            while it is classified as ""is composed of"". In this example, the component Observation
            will apply to ProductAsRealized and the consequence will be to rectify the individual
            faults, while the composite Observation will apply to a ProductVersion and the
            consequence will be a design change. "
228,ObservedEnvironment,"An ObservedEnvironment is a specialization of Product that represents a
            record of observations about the environment in which a product is or has been
            operating. "
229,ObservedEnvironmentAssignment,"An ObservedEnvironmentAssignment is an assignment of a product to the
            environment in which is or has operated. "
230,ObservedEnvironmentToDefinition,"An ObservedEnvironmentToDefinition is a relationship between a record of
            a set of observations about an environment, represented by an ObservedEnvironment, and a
            typical environment, represented by an EnvironmentDefinition. The typical environment is
            the expected environment about which observations have been made. "
231,ObservedEnvironmentToDefinitionVersion,"An ObservedEnvironmentToDefinitionVersion is a relationship between a
            version of the record of a set of observations about an environment, represented by an
            ObservedEnvironmentVersion, and a version of the typical environment, represented by
            EnvironmentDefinitionVersion. The typical environment is the expected environment about
            which observations have been made. "
232,ObservedEnvironmentToDefinitionView,"An ObservedEnvironmentToDefinitionView is a relationship between a view
            of the record of a set of observations about an environment, represented by an
            ObservedEnvironmentView, and a view of the typical environment, represented by
            EnvironmentDefinitionView. The typical environment is the expected environment about
            which observations have been made. "
233,ObservedEnvironmentVersion,"An ObservedEnvironmentVersion is a specialization of ProductVersion that
            identifies a particular version of an ObservedEnvironment. "
234,ObservedEnvironmentView,"An ObservedEnvironmentView is a specialization of ProductViewDefinition
            that provides a view of a version of an observed environment relevant for one or more
            application domains. This view collects the characteristics of the observations on the
            environment. "
235,ObservedEnvironmentViewDefinitionRelationship,"An ObservedEnvironmentViewDefinitionRelationship is a specialization of
            ViewDefinitionRelationship that represents an association between two
            ObservedEnvironmentView instances. "
236,Organization,"An Organization is an administrative structure in which persons are
            active. "
237,OrganizationalLocationIdentification,"An OrganizationalLocationIdentification is location that is defined by
            an identification which is specific in an organization context. "
238,OrganizationBasedLocationRepresentation,"An OrganizationBasedLocationRepresentation is a specialization of
            LocationRepresentation that specifies a location in the context of an organization. The
            location ""Room 99"" in ""The Administration Building"" of a particular university might be
            represented using one instance of OrganizationBasedLocationRepresentation with two
            instances of OrganizationalLocationIdentification and one instance of Organization.
         "
239,OrganizationOrganizationTypeRelationship,"An OrganizationOrganizationTypeRelationship is a relationship between an
            Organization organization and an OrganizationType. "
240,OrganizationOrPersonInOrganizationAssignment,"An OrganizationOrPersonInOrganizationAssignment is an association of an
            organization or a person in an organization with activity or product data.
         "
241,OrganizationRelationship,"An OrganizationRelationship is a relationship between two instances of
            Organization. A team belongs to a department which itself belongs to a company. Such an
            organizational structure can be described up using instances of
            OrganizationRelationship. "
242,OrganizationType,"An OrganizationType is a recognized kind of Organization. legal entity
            change control board sales organization manufacturing organization department
         "
243,OrStateCauseEffectDefinition,"An OrStateCauseEffectDefinition is a specialization of
            StateCauseEffectDefinition. It relates one or more StateDefinition entities that are
            causes to a StateDefinition that is the effect. At least one cause must exist prior to
            the effect. "
244,ParameterizedDistribution," A ParameterizedDistribution is a specialization of
            ProbabilityDistribution that is used to link a named probability distribution to the
            parameters that define it. NOTE: The ParameterizedDistribution of this entity is used to
            discriminate between alternative parameterizations of the same distribution. NOTE: To
            calculate a value using a ParameterizedDistribution it is necessary to know the general
            distribution function, the value of the distribution function parameters, and the
            specific random variable value for which the probability evaluation is required. The
            Probability Distribution module does not define the formula for the distribution
            function, and it is assumed that this is defined externally, either through reference
            information or via a ""formula"" module. This entity provides the distribution function
            parameters. The value of the random variable for which the probability is calculated is
            provided by the ProbabilityDerivationParameter. "
245,Part," A Part is a specialization of Product that collects the definitional
            information of the versions of either a part or of a non-countable material. NOTE: A
            Part does not represent an actual physical object that is or was existing in the real
            world. NOTE: A complex instance of the Part entity and of the Document entity may be
            created in order to represent a document that is a component of a manufactured product,
            for example a user manual of a car. "
246,PartialDocumentAssignment,"A PartialDocumentAssignment is a specialization of DocumentAssignment. A
            PartialDocumentAssignment identifies a specific portion of the contents of a document.
            It assigns this portion to the product data for which it is relevant.
         "
247,PartVersion,"A PartVersion is a specialization of ProductVersion that identifies a
            version of a part. A PartVersion serves as the collector of the data characterizing a
            realizable object in various application contexts. NOTE: A PartVersion is expected to be
            functionally and physically interchangeable with the other versions of the same Part.
         "
248,PartViewDefinition,"A PartViewDefinition is a specialization of ProductViewDefinition that
            defines a characterization view of a version of a Part. "
249,Person,A Person is an individual human being. 
250,PersonInOrganization,"A PersonInOrganization is the identification of a Person and of his role
            in an Organization "
251,PersonOrOrganizationOrPersonInOrganizationInPosition,"A PersonOrOrganizationOrPersonInOrganizationInPosition is a Person,
            Organization, or PersonInOrganization that holds a Position. A person may hold more than
            one position within an organization or organizations. A person can hold two positions in
            an organization: Production Manager and Safety Officer. A position in an organization
            can be held by more than one person or organization. Two people can hold the same
            position in a job-share scheme. "
252,PersonOrOrganizationOrPersonInOrganizationInPositionRelationship," A PersonOrOrganizationOrPersonInOrganizationInPositionRelationship is a
            specialization of an RelationshipObject that is a relationship between one Organization,
            Person, or PersonInOrganization and another. Examples of the relationship are: successor
            job-share NOTE: The meaning of the relationship is determined by classification which is
            identified by the RelationshipObject property. The possible classifications are
            subclasses of . "
253,PhysicalBreakdown,"A PhysicalBreakdown is a specialization of Breakdown that identifies a
            partitioning of a product into a set of related physical elements so as to form
            explicit, parent-child views that comprise the product elements. The parent-child view
            is represented by PhysicalElementUsage instances relating the physical elements in the
            breakdown which are represented by PhysicalElements. A physical breakdown might provide
            a decomposition of an automobile in terms such as body, roof, bonnet, bumpers and this
            breakdown might be different from, and orthogonal to, a parts decomposition.
         "
254,PhysicalBreakdownContext,"A PhysicalBreakdownContext is a specialization of BreakdownContext that
            is a membership relationship between a PhysicalElement and a PhysicalBreakdown of which
            the physical element is a member. A wheel is a member of the physical breakdown of an
            automobile. "
255,PhysicalBreakdownVersion,"A PhysicalBreakdownVersion is a specialization of BreakdownVersion that
            identifies a version of a PhysicalBreakdown An engineer modifies the current physical
            breakdown for an aircraft on the basis of a tail re-design. "
256,PhysicalDocumentDefinition,"A PhysicalDocumentDefinition is a specialization of DocumentDefinition.
            A physical document definition may consist of one or many component hardcopy files.
            Paper plots of technical drawings, micro fiche, or paper documents such as calculations
            or test reports are examples of PhysicalDocumentDefinition. "
257,PhysicalElement,"A PhysicalElement is a specialization of BreakdownElement that
            identifies the elements in one or more PhysicalBreakdown instances. "
258,PhysicalElementDefinition,"A PhysicalElementDefinition is a specialization of
            BreakdownElementDefinition that identifies a view of a version ( PhysicalElementVersion)
            of a PhysicalElement. "
259,PhysicalElementUsage,"A PhysicalElementUsage is a specialization of BreakdownElementUsage that
            is a relationship between a parent and child PhysicalElement. In a physical breakdown,
            the aircraft (parent) might include (as children) a fuselage, wings, tail and
            undercarriage. "
260,PhysicalElementVersion,"A PhysicalElementVersion is a specialization of BreakdownElementVersion
            that identifies a version of a PhysicalElement An engineer changes the details
            describing the undercarriage that is an element in a physical breakdown of an aircraft.
         "
261,Position,"A Position is a function or job performed by a person. It defines
            responsibilities and activities. A position that is not fulfilled by a person is a
            vacancy. Company Director Service Engineer "
262,PositionAssignment,"A PositionAssignment is an association of a Position with activity or
            product data. "
263,PositionGroup,"A PositionGroup is a group for collecting people in their positions to
            cooperate in an assignment. People representing utility companies who cooperate with
            each other to coordinate road works. "
264,PositionGroupAssignment,"A PositionGroupAssignment is an association of a PositionGroup with
            activity or product data. "
265,PositionGroupRelationship,"A PositionGroupRelationship is a relationship that specifies the
            participation of a position in a group. "
266,PositionPositionTypeAssignment,"A PositionPositionTypeAssignment is an assignment of PositionType to a
            Position. It allows many positions to be described by many position types.
         "
267,PositionRelationship," A PositionRelationship is a specialization of an RelationshipObject
            that is a relationship between two instances of Position. Examples of relationships
            between Positions are: Superior / Subordinate Superceded by NOTE: The meaning of the
            relationship is determined by classification which is identified by the
            RelationshipObject property. The possible classifications are subclasses of .
         "
268,PositionType,"A PositionType is a recognized kind of position. Chief Executive Officer
            Manager Service engineer Programmer Aircraft engineering technician propulsion
         "
269,PositionTypeAssignment,"A PositionTypeAssignment is the association of a PositionType with
            activity or product data. "
270,PrecisionQualifier," A PrecisionQualifier is a specification of the number of significant
            digits in the representation of a value. PrecisionQualifier shall be interpreted in
            accordance with PrecisionQualifier in part 45 of this standard. NOTE: The precision is
            defined in clause 2 of ""The Guide to the Expression of Uncertainty in Measurement"".
         "
271,PreDefinedTypeQualifier,"A PreDefinedTypeQualifier is a type of TypeQualifierSelect whose
            PreDefinedTypeQualifier has predefined values: 'minimum': the value is a minimum value;
            'maximum': the value is a maximum value; 'nominal': the value is a nominal value;
            'specified': the value has been specified; 'typical': the value is typical;
            'calculated': the value has been calculated; 'designed': the value represents a value
            intended by the design; 'estimated': the value has been estimated; 'measured': the value
            has been measured; 'required': the value represents a requirement; 'set point': the
            value is used as an initialization value; 'basic': the value is a basic value; 'lower
            deviation': the value is maximum deviation in the negative direction from the nominal or
            basic value; 'upper deviation': the value is maximum deviation in the positive direction
            from the nominal or basic value. "
272,Probability,"A Probability is a specialization of PropertyValue that is a probability
            value (see definition 3.5.1 above). "
273,ProbabilityByName," A ProbabilityByName is a specialization of Probability whose value
            belongs to a one of a set of named classes, rather than by assigning a specific
            numerical value, which may not be available. A safety assessment methodology classes the
            probability an accident as ""very unlikely"", ""unlikely"", ""significantly likely"" and
            ""almost certain"". Any process that has a ""very likely"" or ""almost certain"" chance of
            causing serious injury is shut down. "
274,ProbabilityDerivationParameter," A ProbabilityDerivationParameter is a specialization of NumericalValue
            that is used by a ProbabilityDerived in a particular role in order to calculate the
            particular probability. In a coin tossing trial, the probability calculated is that of
            getting more than 6 heads in ten tosses. The parameter with the role ""minimum number of
            heads"" will have the value ""6"" NOTE: The value attribute, which holds the parameter
            value, is inherited from the parent generalization. "
275,ProbabilityDerived,"A ProbabilityDerived is a specialization of ProbabilityNumeric that
            associates a particular value of ProbabilityNumeric with the source from which the value
            derived together with any parameters used to get the particular value. NOTE: Where the
            probability derived from a probability distribution, the parameters of
            ProbabilityDerived are those needed to get a single value from the distribution, and not
            those which characterise the distribution. For example, in the case of coin tossing, the
            distribution is a Binomial distribution, with parameters of 'probability for a single
            toss', and 'number of tosses', whereas the parameter for the ProbabilityDerived will be
            the 'number of heads obtained'. "
276,ProbabilityDistribution," A ProbabilityDistribution is a specialization of ProbabilityGenerator
            that is a probability distribution. NOTE: For a full understanding of probability
            distribution and the terms used, a textbook on probability theory should be consulted.
            NOTE: This entity describes a particular probability distribution, rather than the
            general type of distribution. For example, in coin tossing experiment, the number of
            heads that may occur is given by a binomial distribution - that is, a type of
            distribution, and outside the scope of this module. "
277,ProbabilityDistributionParameter," A ProbabilityDistributionParameter is a specialization of
            NumericalValue that is one of the set of values that characterises a probability
            distribution. The Normal (or Gaussian) distribution has, in the standard
            parameterisation, two parameters: the mean and the variance NOTE: For many common
            distributions, the mean and the variance are sufficient to characterize a distribution,
            and the parameter list may be empty. NOTE: ProbabilityDistributionParameter inherits the
            'name' attribute from its parent generalization, and this is used to identify the name
            of the parameter within the particular parameterization. The value attribute is also
            inherited. "
278,ProbabilityFunctionValue," A ProbabilityFunctionValue is a specialization of NumericalValue that
            is the value of the probability function at the given random variable value. NOTE: The
            value is an inherited attribute. It is not in general a probability value. In some
            functions for continuous distributions, the probability that the random variable lies
            between two values is the integral of the function of that range. "
279,ProbabilityGenerator," A ProbabilityGenerator is a specialization of PropertyValue. It is a
            source from the ProbabilityDerived is derived. The ProbabilityDerivationParameters are
            applied to the ProbabilityGenerator to get the particular derived value. NOTE: A
            ProbabilityGenerator will generally be either a ProbabilityDistribution or a function of
            some statistics. A probability of ""0.67"" is derived from a Normal (or Gaussian)
            distribution using the parameter ""plus or minus '1.0' standard deviations from the mean""
         "
280,ProbabilityNamedValue," A ProbabilityNamedValue is used to hold the name of the probability
            value. NOTE: The value attribute is the description inherited from the parent
            generalization. In general, this value will be one of an enumeration of possible values
            defined through reference-data. "
281,ProbabilityNumeric,"A ProbabilityNumeric is a specialization of Probability that is
            expressed as a numeric value between 0 and 1. "
282,ProbabilityNumericValue," A ProbabilityNumericValue is a specialization of NumericalValue
            providing a numeric representation of a probability. NOTE: The value attribute is
            inherited from the parent generalization. "
283,Product," A Product is the identification of a product or of a type of product.
            It is a collector of data common to all revisions of the Product. NOTE: Products that
            this entity data type can represent, include: products existing in the real world;
            products that may come into existence as a consequence of some realization process. This
            includes parts and documents; products that are functions. The SS Titanic is a product
            that could be represented by the entity data type Product. Lifeboat is a class of
            products that could be represented by the entity data type Product. Each lifeboat on the
            SS Titanic is a member of this class. NOTE: A product is identified by an organization
            or a person in an organization. NOTE: A product may have zero or more versions. A
            version of a product is represented with an instance of the entity ProductVersion or of
            one of its specializations. "
284,ProductAsIndividual," A ProductAsIndividual is a specialization of Product that identifies an
            individual artefact that has been made or is planned to be made. It is a collector of
            data common to all revisions of the ProductAsIndividual. NOTE: Revisions (
            ProductAsIndividualVersion) of ProductAsIndividual are used to represent whether an
            individual artefact has yet to be made or has been made. The ProductAsIndividualVersion
            specialization ProductAsPlanned is used to represent the revision of an individual
            artefact that has yet to be made and the specialization ProductAsRealized is used to
            represent the revision of an individual artefact that has been made. NOTE: Where
            physical products are being represented, the ProductAsIndividual represents the physical
            or planned physical realization of a product. NOTE: It is likely, but not essential,
            that the artefact, was or will be made from a product design. The product design will be
            represented by a Product which will be related to the ProductAsIndividual by
            ProductDesignToIndividual. NOTE: Many physical products may be produced from a given
            design. A single Product may lead to many ProductAsIndividuals. The design of a personal
            computer is represented by a Product. The personal computer with a serial number on a
            persons desk is represented by a ProductAsIndividual and an associated revision
            represented by ProductAsRealized. The personal computer that has been ordered, allocated
            a serial number for manufacturing planning, but not yet manufactured, is represented by
            a ProductAsIndividual and an associated revision represented by ProductAsPlanned. HMS
            Daring is the first of a new class of ships known as Type 45 Destroyers. It is due to
            enter service in two years time. The Type 45 ship design that applies to HMS Daring is
            represented by a Product; The ship HMS Daring is represented by a ProductAsIndividual.
            This identifies the planned ship, and when built, the actual ship; The planned revision
            of the future ship HMS Daring is represented by a ProductAsPlanned which is related back
            to the ProductAsIndividual; When built, the first revision the actual ship, HMS Daring
            will be represented by a ProductAsRealized which is related back to the
            ProductAsIndividual. "
285,ProductAsIndividualEffectivity,"A ProductAsIndividualEffectivity is a specialization of Effectivity for
            which the domain of applicability is defined as a set of instances of
            ProductAsIndividual. "
286,ProductAsIndividualVersion," A ProductAsIndividualVersion is a specialization of ProductVersion. It
            is a revision of a ProductAsIndividual and acts as a collector of the definitions of
            this revision. The car on my drive is represented by a ProductAsIndividual. The current
            configuration status of the car can be represented by a ProductAsRealized related to the
            ProductAsIndividual. If a safety modification is made to the car resulting in a new
            configuration status of the car, then this may be represented by a new
            ProductAsRealized. HMS Daring is the first of a new class of ships known as Type 45
            Destroyers. It is due to enter service in two years time. The version of the generic
            Type 45 ship design that applies to HMS Daring is represented by a ProductVersion; The
            ship HMS Daring is represented by a ProductAsIndividual. This identifies the planned
            ship, and when built, the actual ship; The planned revision of the future ship HMS
            Daring is represented by a ProductAsPlanned related back to the ProductAsIndividual;
            When built, the first revision the actual ship, HMS Daring will be represented by a
            ProductAsRealized related back to the ProductAsIndividual. "
287,ProductAsIndividualView," A ProductAsIndividualView is a specialization of ProductViewDefinition
            that defines a characterization view of a version of a ProductAsIndividual. NOTE: The
            ProductAsIndividualView entity type supports the representation of different views of a
            ProductAsIndividual for different purposes. Multiple views of the same
            ProductAsIndividual are represented by different instances of ProductAsIndividualView
            for the same ProductAsIndividualVersion. "
288,ProductAsPlanned,"A ProductAsPlanned is a specialization of ProductAsIndividualVersion
            that identifies a revision of an individual artefact that has yet to be made. NOTE: It
            may be planned to make the artefact from of a version of a product design (
            ProductVersion). If this is the case, then the relationship between the artefact (
            ProductAsPlanned) and the design ( ProductVersion) is represented by
            ProductDesignVersionToIndividual. NOTE: If the planned artefact ( ProductAsPlanned) is
            subsequently made into an actual artefact ( ProductAsRealized) then they are related by
            the ProductPlannedToRealized relationship. "
289,ProductAsRealized,"A ProductAsRealized is a specialization of ProductAsIndividualVersion
            that identifies a revision of an individual artefact that has been made. A product whose
            properties can only be known by observation or by derivation from observations. NOTE:
            Where physical products are being represented, the ProductAsRealized represents the
            physical product - something one can touch. NOTE: The artefact may have been made from a
            version of a product design ( ProductVersion). If this is the case, then the
            relationship between the artefact ( ProductAsRealized) and the design ( ProductVersion)
            is represented by ProductDesignVersionToIndividual. NOTE: The artefact may have been
            planned and represented by ProductAsPlanned. In which case, the actual artefact (
            ProductAsRealized) is related to the planned artefact ( ProductAsPlanned) by the
            ProductPlannedToRealized relationship. "
290,ProductBasedLocationIdentification,"A ProductBasedLocationIdentification is a specialization of
            LocationRepresentation that specifies a location in the context of a product. Seat
            number M in the Aircraft. "
291,ProductConcept,"A ProductConcept is the identification of a set of similar products that
            were, are or will be proposed to customers. NOTE: The definition of product concepts is
            driven by market and customer requirements and forecasting. A ProductConcept often
            corresponds to the highest level item(s) manufactured by an organization for customers.
            In an organization which manufactures cars and engines for cars, the car models will be
            represented by instances of ProductConcept. NOTE: The entity data type ProductConcept
            enables to represent customer-oriented identification of products that are to be
            delivered to customers, while the entity data type Product enables to identify and to
            track the history of items that are designed and manufactured, as a tangible solution,
            or component of the solution, for a product concept. NOTE: A product concept may be
            characterized by a set of product features identified by the customers or derived from
            customers' needs. NOTE: Depending on the kind of industry and products, a product
            concept might be offered to the customers in one or many different configurations.
         "
292,ProductConfiguration,"A ProductConfiguration is the identification of a ProductConcept as a
            configuration. NOTE: The entity ProductConfiguration corresponds to the concept of
            configuration item defined, in some configuration management standards, as an item
            subject to configuration management. A ProductConfiguration may represent a component of
            a contracted product, onto which severe safety rules apply and for which configuration
            management is therefore rigorously applied. NOTE: A ProductConfiguration may identify a
            variation of a ProductConcept, an entire ProductConcept, or some portion thereof. NOTE:
            A ProductConfiguration can be established prior to the existence of a corresponding
            product. "
293,ProductConfigurationHierarchicalRelationship,"A ProductConfigurationHierarchicalRelationship is a specialization of
            ProductConfigurationRelationship that is used to represent a hierarchical relationship
            between a parent ProductConfiguration and a child ProductConfiguration.
         "
294,ProductConfigurationRelationship,"A ProductConfigurationRelationship is a relationship between a pair of
            ProductConfigurations. "
295,ProductConfigurationRevisionSequence,"A ProductConfigurationRevisionSequence is a specialization of
            ProductConfigurationRelationship that is used to relate a previous version (predecessor)
            of a ProductConfiguration to the version that replaces it (successor).
         "
296,ProductDefinitionElementRelationship,"A ProductDefinitionElementRelationship is a relationship between a
            BreakdownElementDefinition or a BreakdownElementUsage and a ViewDefinitionRelationship
            or a ProductViewDefinition "
297,ProductDesignToIndividual,"A ProductDesignToIndividual is a relationship between a product design,
            represented by Product, and the product that is planned to be made or has been made from
            the design, represented by ProductAsIndividual. "
298,ProductDesignVersionToIndividual,"A ProductDesignVersionToIndividual is a relationship between a version
            of a product design, represented by ProductVersion or ProductConfiguration, and the
            product that is planned to be made ( ProductAsPlanned) or has been made (
            ProductAsRealized) from the design. "
299,ProductDesignViewToIndividual,"A ProductDesignViewToIndividual is a relationship between a product
            design, represented by ProductViewDefinition. or ProductConfiguration, and a view of the
            product that is planned to be made or has been made ( ProductAsIndividualView) from the
            design. "
300,ProductGroup,"A ProductGroup is an identification of a set of ProductConcepts,
            Products, ProductGroups, ProductVersions or ProductAsIndividuals that have been grouped
            together. All the aircraft sold to BigPlanes airways. "
301,ProductGroupMembership,"A ProductGroupMembership is an identification of an instance of an
            entity defined in the type ProductGroupMembershipSelect that belongs to a ProductGroup.
         "
302,ProductGroupRelationship,"A ProductGroupRelationship is a relationship between two ProductGroups.
            ExternalOwlClass is used to specify the meaning or type of the relationship. NOTE: A
            subset is a common type of relationship. It indicates that one ProductGroup is a subset
            of another. "
303,ProductInAttachmentSlot,"A ProductInAttachmentSlot is a specialization of ViewDefinitionUsage
            that is a relationship between an AttachmentSlot and a ProductViewDefinition of a
            Product that is designed to be attached to the attachment slot. A long-range fuel tank
            is designed to be attached to an aircraft in an attachment slot that corresponds to a
            pylon mounting on a wing. "
304,ProductPlannedToRealized,"A ProductPlannedToRealized is a relationship that establishes that a
            revision of a planned artefact represented by ProductAsPlanned has been realized as a
            revision of an actual artefact ProductAsRealized. "
305,ProductRelationship,"A ProductRelationship is an association between two Products.
         "
306,ProductVersion,"A ProductVersion is a revision of a Product. It is a collector of the
            definitions of this revision of the Product. NOTE: The set of all instances of
            ProductVersion of the same Product represents the history of the product.
         "
307,ProductVersionRelationship,"A ProductVersionRelationship is an association between two versions of
            Product. NOTE: A relationship may exist between ProductVersion of different Product or
            between different versions of the same Product. "
308,ProductViewDefinition,"A ProductViewDefinition is a characterization of a ProductVersion,
            relevant in one or more application domains and for one or more life cycle stages. A
            ProductViewDefinition is a collector of the properties that characterize the
            ProductVersion in the initialContext and additionalContexts. The design of the SS
            Titanic and the as-built description of the SS Titanic can be represented as two
            instances of ProductViewDefinition. "
309,Project,A Project is an identified program of work. 
310,ProjectAssignment,"A ProjectAssignment is a mechanism to associate a Project with activity
            or product data. "
311,ProjectRelationship,"A ProjectRelationship is an association between two instances of Project
            with an identification and a description of their relationship. "
312,PromissoryAssemblyViewUsage,"A PromissoryAssemblyViewUsage is a specialization of
            AssemblyViewRelationship. It establishes a relationship between an assembly and a
            component, regardless of the number of intermediate levels between them, which may be
            established with instances of NextAssemblyViewUsage. NOTE: A PromissoryAssemblyViewUsage
            may be used when the product structure is not completely defined, to capture the intent
            that the constituent will be used in that assembly. "
313,PropertyDefinitionAssignment," A PropertyDefinitionAssignment is a specialization of an
            AssignmentObject that represents the assignment of a ExternalPropertyDefinition to
            product or activity data. NOTE: The meaning of the assignment is determined by
            classification which is identified by the AssignmentObject property. The possible
            classifications are subclasses of . "
314,PropertyDefinitionRelationship, To be defined 
315,PropertyValue," A PropertyValue acts as a proxy for a notional property value which may
            have several representations. NOTE: The actual magnitude and descriptions of a
            PropertyValue (e.g. 1 kilogramme or 2.2 pounds) are only provided as part of one or more
            representations of a PropertyValue. The PropertyValue itself cannot have a magnitude, or
            even a name, that is independent of the type of representation chosen for the value in
            question. "
316,PropertyValueAssignment," A PropertyValueAssignment assigns a PropertyValue (or collection of
            equivalent PropertyValues) to activity or product data. "
317,PropertyValueRelationship," A PropertyValueRelationship is a specialization of RelationshipObject.
            It represents an association between two PropertyValues. An association between a value
            for a property expressed in a given unit and an equivalent value for the same property
            in a different unit. The PropertyValueRelationship is classified as a .
         "
318,Proxy," A Proxy is a relationship between a subject and something for which the
            subject is a proxy. "
319,ProxyRelationship," A ProxyRelationship is a relationship between a pair of Proxys. NOTE:
            This relationship may be classified to provide more specific meanings.
         "
320,QualificationAssignment,"A QualificationAssignment is the assignment of a qualification to a
            person or organization. "
321,QualificationType,"A QualificationType is the identification of a definitive recognition as
            a practitioner. A driving licence. A qualification for executing the Ground Running task
            for RB211 engines. A Military rank such as Colonel, or Captain Educational qualification
            such as GCSE, A level, Degree, Ordinary National Certificate, Higher National
            Certificate, City and Guilds, or GNVQ. "
322,QualificationTypeRelationship,"A QualificationTypeRelationship is an association between two
            QualificationTypes. Qualification X is a prerequisite for qualification Y. Qualification
            X is equivalent to qualification Y. "
323,QualitativeUncertainty,"A QualitativeUncertainty is a specialization of UncertaintyQualifier.
            The uncertainty is defined in clause 2 of ""The Guide to the Expression of Uncertainty in
            Measurement"". "
324,RandomVariable," A RandomVariable is a specialization of NumericalValue that is the
            value of a random variable. NOTE: The value attribute is inherited from the parent
            generalization. "
325,RegionalCoordinate,"A RegionalCoordinate is a location that is specified relative to a
            Regional location system. "
326,RegionalGridLocationRepresentation,"A RegionalGridLocationRepresentation is a specialization of
            LocationRepresentation that specifies a reference grid system. "
327,RelatedConditionParameter,"A RelatedConditionParameter is a relationship between a
            ConditionParameter and a ConditionEvaluationParameter. This relationship is used to
            record the relationship between the parameters used to define a condition and the
            parameters used to evaluate it. The value of oil pressure (1.9 bar) used in
            ConditionEvaluation (instance 87) was a measured value of the parameter used to define
            condition 29 (oil pressure on gauge 3). "
328,RelatedConsequence,"A RelatedConsequence is a specialization of ViewDefinitionRelationship
            describing the expected consequences of a specific perception of a risk.
         "
329,RelationshipObject," A RelationshipObject represents a dependency between sets of product or
            activity data. "
330,RepeatCount,"A RepeatCount is a type of LoopingElement. It invokes a specified number
            of repetitions of the LoopingElement TaskElement inherited from the LoopingElement
            parent generalization. "
331,RepeatUntil,"A RepeatUntil is a type of LoopingElement. It invokes repetitions of a
            further TaskElement and is repeated until the specified condition is satisfied. The
            element being repeated shall be executed at least once and the condition tested after
            the first execution. "
332,RepeatWhile,"A RepeatWhile is a type of LoopingElement. It invokes repetitions of a
            further TaskElement and is repeated while the specified condition is satisfied. The test
            condition shall be evaluated prior to invoking the method and may result in the
            LoopingElement not being executed at all. "
333,RequiredResource," A RequiredResource is an identified need for resource. The role of a
            required resource is determined by classification. ""facility"", ""test equipment"",
            ""supervisor"" are examples of classifications of a required resource.
         "
334,RequiredResourceAssignment,"A RequiredResourceAssignment is an association of a resource requirement
            statement with one or more entities that requires the resource. task, task step,
            activity, activity method, organization are examples of entities to which the resource
            requirement statement could be related. The role of the assignment is determined by
            classification. The assignment can be classified as ""required by"". NOTE: An association
            between a required resource and actions that are needed prior to its usage. A resource
            required by the activity ""12"" needs to be calibrated prior to usage. The calibration
            activity ""21"" is associated with the same required resource A resource required by the
            task ""123"" needs to be disposed after its usage. This disposal task ""456"" is associated
            with the same required resource. "
335,RequiredResourceRelationship,"A RequiredResourceRelationship is a relationship between two required
            resource statements. The meaning of the relationship is determined by classification.
            ""alternative"" and ""realized by"" are examples of required resource relationship.
         "
336,Requirement,"A Requirement is a specialization of Product that is used to uniquely
            identify a requirement. NOTE: The term ""requirement"" is used here in the sense that term
            is used in systems engineering and similar industrial domains. NOTE: There may be many
            versions of a requirement RequirementVersion ). There may also be more than one
            domain-specific view of a given RequirementVersion (using the RequirementViewDefinition
            entity). The requirement entity is simply a placeholder for holding a unique
            requirement. Most associations and properties are defined at the
            RequirementViewDefinition level - that is in the context of a domain. A requirement may
            be identified as ""NOx emissions requirement"", and uniquely identified as ""Req2"". NOTE:
            Systems engineering tools and organizations may use differing identification mechanisms.
            Multiple identifiers may be assigned to a requirement using the Identifier entity.
         "
337,RequirementAssignment,"A RequirementAssignment is used to relate a requirement (via the
            RequirementViewDefinition entity) to data types representing the items which are
            affected by the requirement. A requirement ""the vehicle shall have a maximum power
            output of at least 150BHP"" could be assigned to the data types which are used to
            represent the vehicle's engine. "
338,RequirementCollectionRelationship," A RequirementCollectionRelationship is a specialization of
            ViewDefinitionRelationship that is used to relate a parent (collection) requirement to
            its member requirements. This provides a method for collecting together a set of
            requirements and treating them as a single requirement, whilst still being able to refer
            to individual requirements. NOTE: The inherited "" ViewDefinitionRelationship"" and ""
            ViewDefinitionRelationship"" attributes have been renamed for purposes of clarity.
         "
339,RequirementSatisfiedBy,"A RequirementSatisfiedBy is a relationship between an item (specified in
            RequirementAssignmentSelect) and a requirement, asserting that the item satisfies the
            identified requirement. A data type used to represent a vehicle's engine with a power
            output of 160BHP could be asserted to satisfy a requirement ""the vehicle shall have a
            maximum power output of at least 150BHP"". "
340,RequirementSource,"A RequirementSource is a relationship between a requirement (via the
            RequirementViewDefinition entity) and the data types representing the source of the
            requirement The source of the requirement ""the vehicle shall have a maximum power output
            of at least 150BHP"" could be a document representing the findings of a market survey of
            sports car buyers. "
341,RequirementVersion,"A RequirementVersion is a specialization of ProductVersion that
            identifies a particular version of a requirement. NOTE: This entity is used to record
            different versions of a requirement. In this case, the word ""version"" implies ""revision""
            - that is a particular release of a requirement. A given requirement might have versions
            1.0, 1.1, 1.2 and 2.0. "
342,RequirementVersionRelationship,"A RequirementVersionRelationship is a specialization of
            ProductVersionRelationship that is used to relate a previous version (predecessor) of a
            requirement to the version that replaces it (successor). "
343,RequirementViewDefinition," A RequirementViewDefinition is a specialization of
            ProductViewDefinition that provides a view of a requirement version relevant for one or
            more application domains. This view collects requirement data for specific engineering
            purposes. An engineer may have responsibility for collecting all requirements associated
            with the cooling of an engine - covering engine block, tubing, water pump, electric fan.
            Some requirements in a RequirementViewDefinition might impact on different disciplines.
            Multiple RequirementViewDefinition instances may be used to present different views of a
            given requirement for each discipline. The definition of the requirement is represented
            by a set of definitional properties referenced from
            RequirementViewDefinition.definitionalRepresentations. If more than one definitional
            property is provided each property shall be equivalent. Any other property that is
            associated with the RequirementViewDefinition is assumed to be a non-defining property,
            such as an annotation etc. The requirement that the weight should be less than 4 Kgs can
            be represented by by a string representation ""weight must be 4Kg"" and a numeric
            representation ""4Kg"" specified as a value with units. NOTE: The definition attribute of
            each of the definitionalRepresentations shall refer to a definition for
            RequirementDefinition. The definition attribute of the definitionalRepresentations could
            refer to an ExternalPropertyDefinition that uses an ExternalOwlObject with individual
            set to
            ""http://docs.oasis-open.org/plcs/ns/plcslib/v1.0/data/contexts/OASIS/refdata/plcs-rdl#Requirement_definition"".
         "
344,RequirementViewDefinitionRelationship,"A RequirementViewDefinitionRelationship is a specialization of
            ViewDefinitionRelationship. A RequirementViewDefinitionRelationship is the association
            between one RequirementViewDefinition and another. "
345,ResourceAsRealized,"A ResourceAsRealized is a record of a resource that has been used or
            consumed. A resource as realized can be classified as ""Used"" or ""Consumed"".
         "
346,ResourceAsRealizedAssignment,"A ResourceAsRealizedAssignment is an association of a resource record
            statement with the entity that used or consumed the resource. The role of the assignment
            is determined by classification. "
347,ResourceAsRealizedRelationship," A ResourceAsRealizedRelationship is a relationship between the record
            of used or consumed resources and the corresponding statement of RequiredResource.
            ""Alternative"" and ""Corresponding"" are examples of classifications of resource as
            realized relationship. NOTE: A resource used or consumed can be recorded without having
            a corresponding resource requirement statement. "
348,ResourceEvent," A ResourceEvent is an abstract generalization of instances that
            represents an event or action that affects the balance or availability of a managed
            resource. NOTE: Only non-abstract specializations of the ResourceEvent can be
            instantiated. A ResourceEvent is The role of a resource event is determined by which is
            defined by the ResourceEvent property. A resource event can be classified as ""Planned""
            or ""Actual"". "
349,ResourceEventCorrespondenceRelationship,"A ResourceEventCorrespondenceRelationship is an association of a
            resource event and a corresponding statement of RequiredResource. The meaning of the
            relationship is determined by classification. NOTE: A resource event can be planned or
            recorded without having a corresponding resource requirement statement. A resource event
            correspondence relationship can be classified as ""Designated for"". "
350,ResourceEventRelationship,"A ResourceEventRelationship is a specification of how an ResourceEvent
            may be associated with another ResourceEvent. The meaning of the relationship is
            determined by classification. A managed resource relationship can be classified as
            ""realized by"" or ""replaces"". "
351,ResourceGroupRelationship,"A ResourceGroupRelationship is a specialization of
            ResourceItemRelationship that specifies the means to associate two resource items that
            are part of a resource group. The meaning of the entity is determined by classification.
            The relationship between a tool set and a mallet could be classified as ""Contains"". The
            relationship between a facility and compressed air could be classified as ""Provides"".
         "
352,ResourceItem,"A ResourceItem is an item that can occur in the role of a resource
            within the application context. A ResourceItem may be classified as ""Facility"",
            ""Replaceable unit"", or ""Package"". "
353,ResourceItemAssignment," A ResourceItemAssignment is an association of a resource item with some
            product information. The role of the assignment is determined by classification. The
            assignment can be classified as ""applicable to"" or ""acquired for"". "
354,ResourceItemRealization," A ResourceItemRealization is a specification of how a resource item may
            be associated with an item that serves as the resource. A product may serve as a
            resource. "
355,ResourceItemRelationship," A ResourceItemRelationship is a specification of how a resource item
            may be associated with another resource item. The role of the relationship is determined
            by classification. The relationship between a product and a package can be classified as
            ""Preferred"". "
356,Risk,"A Risk is a specialization of Product that is the potential for
            realization of unwanted negative consequences of an event. NOTE: ISO GUIDE 73 defines
            ""risk"" as the combination of the probability of an event and its consequence. In some
            situations, risk is a deviation from the expected. NOTE: A risk can also have a possible
            positive outcome. In such cases it is often referred to as an opportunity or reward.
            NOTE: ISO/IEC Guide 51:1999 defines risk as the combination of the probability of
            occurrence of harm and the severity of that harm. NOTE: In the safety field, risk
            management is focused on prevention and mitigation of harm. ISO/IEC Guide 51:1999 should
            be used for safety aspects. 'Line shutdown' is an example of Risk in the context of a
            manufacturing system's reliability. 'Transportation jam-up', 'customer anger',
            'collateral damage', and 'greater susceptibility to interruption of supply during
            crises' are all examples of Risk. 'Privacy' and 'security' are examples of Risk for the
            telecommunications industry. 'Fly-by-wire', the form-fit-function replacement of
            mechanical devices with a combination of electrical, hydraulic, and pneumatic units.
            Timing such as 'premature rejection' and 'premature commitment' are other examples of
            Risk. "
357,RiskConsequence,"A RiskConsequence is a specialization of RiskViewDefinition and
            specifies the outcome of an event. NOTE: There may be one or more consequences of an
            event. NOTE: Consequences can range from positive to negative. However, consequences are
            always negative for safety aspects. NOTE: Consequences can be expressed qualitatively or
            quantitatively. "
358,RiskEvent," A RiskEvent is a specialization of an AssignmentObject that represents
            the unwanted (or wanted) event resulting in the RiskPerception. The probability of the
            event occurring is represented by a set of probabilities referenced from
            RiskEvent.probabilityRepresentations. If more than one probability is provided each
            probability shall be equivalent. NOTE: The definition attribute of the
            probabilityRepresentations shall refer to a definition for perceivedProbability. The
            definition attribute of the probabilityRepresentations could refer to an
            ExternalPropertyDefinition that uses an ExternalOwlObject with individual set to
            ""http://docs.oasis-open.org/plcs/ns/plcslib/v1.0/data/contexts/OASIS/refdata/plcs-rdl#Perceived_Probability"".
         "
359,RiskImpactAssignment," A RiskImpactAssignment is a specialization of AssignmentObject and a
            type of PropertyAssignmentSelect. It assigns a set of items that might be impacted to
            the RiskConsequence that is the cause of the effect. "
360,RiskPerception," A RiskPerception is a specialization of RiskViewDefinition that defines
            values or concerns (a risk level) with which a stakeholder views a particular Risk. The
            risk level is represented by a set of property values referenced from
            RiskPerception.riskLevelRepresentations. If more than one property value is provided
            each property value shall be equivalent. One riskLevelRepresentation could be 4 (from a
            maximum of 5) and a second could be ""high"". NOTE: The definition attribute of each of
            the riskLevelRepresentations shall refer to a definition for RiskLevel. The definition
            attribute of the riskLevelRepresentations could refer to an ExternalPropertyDefinition
            that uses an ExternalOwlObject with individual set to
            ""http://docs.oasis-open.org/plcs/ns/plcslib/v1.0/data/contexts/OASIS/refdata/plcs-rdl#Risk_Level"".
            NOTE: RiskPerception depends on the stake holder's expressed needs, issues, and
            knowledge. NOTE: RiskPerception can differ from objective data. NOTE: RiskPerception may
            be used qualitatively or quantitatively to form a risk matrix. NOTE: Risk will be
            perceived differently in different contexts, such as in the context of human safety,
            mission success, project time schedule, performance or economy. "
361,RiskPerceptionRelationship,"A RiskPerceptionRelationship defines an association between two
            instances of RiskPerception. "
362,RiskPerceptionSourceAssignment," A RiskPerceptionSourceAssignment is a specialization of
            AssignmentObject. It assigns a set of one or many items that are the source for a
            RiskPerception to the RiskPerception. "
363,RiskRelationship," A RiskRelationship is a specialization of ProductRelationship. It is an
            association between two an association between two instances of Risk.
         "
364,RiskVersion," A RiskVersion is a specialization of ProductVersion. It defines a form
            of a risk that differ in certain respects from an earlier form of that risk or from
            other forms of that risk. NOTE: Use of RiskVersion allows several RiskPerception
            instances to be assigned to a specific Risk. "
365,RiskViewDefinition," ARiskViewDefinition is a specialization of a ProductViewDefinitionÂ  and
            is an abstract generalization of instances that represents â¦ NOTE: Only non-abstract
            specializations of the RiskViewDefinition can be instantiated. "
366,Scheme,"A Scheme is a specialization of ActivityMethod. It provides the
            identification and description of an intended course of action to accomplish an
            objective. A Scheme enables the ordering of entries. Dates and times may be specified
            for entries and time intervals between entries. NOTE: A Scheme may be classified as a
            Plan or Schedule, and it may be further classified into specific types of Plans or
            Schedules. Acquisition plan, Maintenance plan, Resource schedule are examples of
            schemes. "
367,SchemeEntry,"A SchemeEntry is a specialization of ActivityMethod that provides the
            identification and description of a single entry in a specific Scheme. NOTE: A
            SchemeEntry may be associated with time constraints. NOTE: A SchemeEntry only exists
            within the scope of a specific Scheme. "
368,SchemeEntryAssignment," A SchemeEntryAssignment is a specialization of an AssignmentObject that
            represents the assignment of SchemeEntry instances to instances that are specializations
            of SchemeEntryAssignmentSelect. NOTE: The meaning of the assignment is determined by
            classification which is identified by the AssignmentObject property. The possible
            classifications are subclasses of . NOTE: The SchemeEntryAssignment links the single
            items included in Plans and Schedules with their associated SchemeEntry. These items may
            be actions, events, or tasks depending on the nature of the Plan or Schedule.
         "
369,SchemeEntryRelationship,"A SchemeEntryRelationship is a specialization of
            ActivityMethodRelationship. It relates two SchemeEntry entities. An association may
            exists between SchemeEntry entities that relate to different Scheme or between different
            SchemeEntry entity instances for the same Scheme. NOTE: The SchemeEntryRelationship
            provides the ability to relate entries included in Plans or Schedules in different ways.
            By applying classifications on the SchemeEntryRelationship it can be used for different
            purposes. Decomposition, Dependency, and sequencing are examples of kinds of
            relationships possible between schema entries. "
370,SchemeRelationship," A SchemeRelationship is a specialization of ActivityMethodRelationship
            relating two Schemes. NOTE: The SchemeRelationship provides the ability to relate Plans
            or Schedules represented by the Scheme entity in different ways. If classifications are
            available to the schema using this on, by applying classifications on the
            SchemeRelationship it can be used for different purposes. Decomposition, based-on,
            alternative, version are kinds of relationships between Schemes. "
371,SchemeSubjectAssignment," A SchemeSubjectAssignment is a specialization of an AssignmentObject
            that represents the assignment of Scheme with a specific subject. NOTE: The meaning of
            the assignment is determined by classification which is identified by the
            AssignmentObject property. The possible classifications are subclasses of . NOTE: The
            SchemeSubjectAssignment links the Plans and Schedules with their associated subjects or
            targets. This may indicate the intent of the scheme. The maintenance plan for an
            individual vehicle, where the subject attribute points to an entity instance
            representing the individual vehicle. "
372,SchemeVersion,"A SchemeVersion is a specialization of ActivityMethod. It enables
            version control of Scheme. "
373,SchemeVersionAssignment," A SchemeVersionAssignment is a specialization of an AssignmentObject
            that represents the assignment of a SchemeVersion instances to instances that are
            specializations of SchemeVersionAssignmentSelect. NOTE: The meaning of the assignment is
            determined by classification which is identified by the AssignmentObject property. The
            possible classifications are subclasses of . "
374,SchemeVersionRelationship," A SchemeVersionRelationship is a specialization of
            ActivityMethodRelationship relating two SchemeVersions. NOTE: The meaning of the
            relationship is determined by classification which is identified by the
            RelationshipObject property. The possible classifications are subclasses of .
         "
375,SecurityClassification,"A SecurityClassification is a level of confidentiality that can be
            applied to protect activity or product data against unauthorized usage.
         "
376,SecurityClassificationAssignment,"A SecurityClassificationAssignment is an association of a
            SecurityClassification with activity or product data. "
377,SelectedItemAssignment,"A SelectedItemAssignment is the identification of the product or
            activity data referenced by SelectedItemAssignment as being a member of a class
            identified by ClassSelect. "
378,SequenceOfState,"A SequenceOfState is a specialization of StateRelationship in which one
            set of State precedes another set of State. "
379,SequenceOfStateDefinition,"A SequenceOfStateDefinition is a specialization of
            StateDefinitionRelationship. It defines a sequence of two or more state definitions.
         "
380,SequencingRelationship," A SequencingRelationship is a specialization of
            SchemeEntryRelationship. It defines a specific type of sequencing and relative timing
            for two SchemeEntry. NOTE: Specific types of sequencing could include start-start,
            finish-start. "
381,SerialEffectivity,"A SerialEffectivity is a specialization of Effectivity for which the
            domain of applicability is defined as a possibly open-ended interval of serial numbers.
         "
382,SetMembership," ASetMembership is a relationship that is between a set and a thing that
            indicates the thing is a member of the set. NOTE: the term 'class' and 'set' are
            synonyms. "
383,ShapeDependentPropertyRepresentation,"A ShapeDependentPropertyRepresentation is the representation of a
            characteristic derived from or imposed to an ItemShape or a ShapeElement. The centre of
            mass is an example of shape dependent property, of a shape, that can be represented by a
            cartesian point. The area and the volumes are examples of characteristic that can be
            represented by a measure value with unit. NOTE: A ShapeDependentPropertyRepresentation
            is independent of the representations of the shape. "
384,ShapeDescriptionAssociation,"A ShapeDescriptionAssociation is an association of a geometric
            representation with a shape characteristic. "
385,ShapeElement,"A ShapeElement is a portion of a shape. The threaded portion of the
            shape of a bolt may be represented as a ShapeElement, so that other properties, such as
            surface finish, may be associated with it. "
386,ShapeElementRelationship,"A ShapeElementRelationship is a relationship between two instances of
            ShapeElement. "
387,ShapePlacementAssociation,"A ShapePlacementAssociation is a specialization of
            ShapeDescriptionAssociation. "
388,SimultaneousElements,"A SimultaneousElements is a specialization of ConcurrentElements that
            represents two or more actions to be performed together. "
389,StandardUncertainty,"A StandardUncertainty is a specialization of UncertaintyQualifier. A
            StandardUncertainty may be an ExpandedUncertainty. The uncertainty is defined in clause
            2 of ""The Guide to the Expression of Uncertainty in Measurement"". "
390,StartTask,"A StartTask is a type of TaskElement. It signifies the start point of
            the task. NOTE: Not all formal task description require start and end elements, their
            inclusion is in a sequence is optional. "
391,State,"A State is the mode of being in which something does or could exist or
            existed for a period of time. NOTE: A state's existence can be just a state that an
            instance is currently in, a predicted state that an instance will eventually be in, or
            an observed state that an instance has been in. NOTE: The period of existence may be an
            instant or longer. Main Engine No. 1 is in ""operation"". When Generator No. 2 surpasses
            5,000 service hours, it will enter ""maintenance"" mode. The portable computer's power
            supply was attached after it displayed a ""low-battery"" warning. "
392,StateAssertion,"A StateAssertion is used to assert that the subject State is in
            conformance with a particular StateDefinition. "
393,StateAssessment,"A StateAssessment is used to determine whether the subject State is
            comparable with a particular StateDefinition. "
394,StateAssignment,"An StateAssignment is a relationship that allows a subject to have State
            or to be in a State. "
395,StateCauseEffect,"A StateCauseEffect is a specialization of state relationship and it
            relates two or more states as one state causing particular resulting effect state(s). In
            turn, an effect state can become a new causing state yielding in yet more effect states.
         "
396,StateCauseEffectDefinition,"A StateCauseEffectDefinition is a specialization of
            StateDefinitionRelationship that is used to define a causal relationship between two
            sets of StateDefinition entities. At least one StateDefinition acts as a cause and at
            least one StateDefinition acts as a effect. NOTE: Additional causal relationships
            between states can be expressed using the following subtypes:
            AndStateCauseEffectDefinition, OrStateCauseEffectDefinition, and
            XorStateCauseEffectDefinition. "
397,StateComplementDefinition,"A StateComplementDefinition is a specialization of
            StateDefinitionRelationship. It is a relationship among three sets of StateDefinition
            entities. It defines the complement of a set of StateDefinition entities relative to a
            set of StateDefinition entities that are the universe. NOTE: The semantics are the same
            as in elementary set theory. NOTE: The relationship between a StateDefinition and its
            complement is symmetrical. "
398,StateDefinition,"A StateDefinition is a mode of being. In formal systems, a
            StateDefinition is the definition of a situation during which some (usually implicit)
            invariant condition holds. "
399,StateDefinitionAssignment,"An StateDefinitionAssignment is a mechanism that enables an instance to
            have or to be in a StateDefinition. "
400,StateDefinitionRelationship,"A StateDefinitionRelationship is an association between two or more
            instances of StateDefinition. NOTE: Relationships between StateDefinition entities may
            be used to support fault diagnosis. "
401,StateObserved,"A StateObserved is a specialization of State. It is an individual or
            realized State that is observed. "
402,StatePredicted,"A StatePredicted is a specialization of State It is a predicted actual
            State. Where a predicted state needs to be related to an observed state, the
            StatePredictedToObserved entity shall be used. "
403,StatePredictedToObserved,"A StatePredictedToObserved is a specialization of state relationship. It
            specifies the relationship between two individual states, one of which is a
            StatePredicted to a second state which is a StateObserved. "
404,StateProperSubsetDefinition,"A StateProperSubsetDefinition is a specialization of
            StateDefinitionRelationship. It is a relationship between two sets of StateDefinition
            entities. NOTE: The relationship between a state and its environment can be described as
            a StateProperSubsetDefinition. The identification of an intrinsic state is the
            properSubset. The identification of an extrinsic state is the properSuperset.
         "
405,StateRelationship,"A StateRelationship is a relationship between two or more State.
         "
406,StateSubsetDefinition,"A StateSubsetDefinition is a specialization of
            StateDefinitionRelationship. It is a relationship between two sets of StateDefinition
            entities. NOTE: The first set may be equal to the second set. "
407,StateSymptomDefinition,"A StateSymptomDefinition is a specialization of
            StateDefinitionRelationship. It relates two or more StateDefinition entities in regards
            to symptom, where a symptom is something that indicates the existence of something else.
            At least one StateDefinition acts as a symptomCause and at least one StateDefinition
            acts as a symptomEffect. "
408,StateTransition,"A StateTransition is a specialization of state relationship and it
            relates two or more states before and after a transition in State, where at least one
            State is a start state and at least one State is an end state. "
409,StateTransitionDefinition,"A StateTransitionDefinition is a specialization of
            StateDefinitionRelationship. It relates two or more StateDefinition entities before and
            after a transition in state, where at least one StateDefinition is a startState and at
            least one StateDefinition is an endState. "
410,StringValue,"A StringValue is a specialization of PropertyValue that represents a
            sequence of one or more alphanumeric characters."
411,StructuredTaskElement,"A StructuredTaskElement is a type of TaskElement. It is made up of other
            TaskElements "
412,SubsetMember," ASubsetMember is a relationship that is between: set A; and set B. that
            indicates: each member of set A is also a member of set B. NOTE: Set A may be equal to
            set B. "
413,SuppliedPartRelationship,"A SuppliedPartRelationship is a specialization of
            ProductVersionRelationship that relates two instances of ProductVersion that represent
            the same instance in different organizational contexts. One of the organizations is the
            supplier of the instance to the other organization. This entity is applicable for part
            versions and document versions. NOTE: This entity enables to represent the fact that two
            organizations may use distinct identifiers to identify their Product and their versions.
            NOTE: This mechanism can only be used in an information system or in exchange files
            where the content of the id attribute of instances of Product is not constrained by a
            particular identification scheme. "
414,System,"A System is a specialization of Product used to identify a conceptual
            solution to a collection of requirements. NOTE: The concept system is any thing -
            matter, energy, organisation or information or a combination of these - for which
            reproducible measurements exist. The concept system excludes any asserted thing based on
            personal experience for which no reproducible measurements exist. NOTE: SEDRES
            Definition: ""An assembly of interacting, active components or elements forming a whole"".
            NOTE: Another definition would be ""That which is discernible by reproducible measurement
            of its characteristics, and has a defined boundary (statically and dynamically) with
            respect to the universe"". "
415,SystemBreakdown,"A SystemBreakdown is a specialization of Breakdown that identifies a
            partitioning of a system into a set of related elements so as to form explicit, assembly
            - component views that comprise the system elements. The assembly-component view is
            represented by SystemElementUsage instances relating the system elements in the
            breakdown which are represented by SystemElements. A system breakdown provides a
            decomposition of an aircraft in terms of high-level mechanisms such as fuel system or
            flight control system - which might, in the second example, further decompose into
            low-level systems such as autopilot system and instrument landing system.
         "
416,SystemBreakdownContext,"A SystemBreakdownContext is a specialization of BreakdownContext that is
            a membership relationship between a SystemElement and a SystemBreakdown of which the
            system element is a member. A heating system is a member of the breakdown of a climate
            control system. "
417,SystemBreakdownVersion," A SystemBreakdownVersion is a specialization of BreakdownVersion that
            identifies a version of a SystemBreakdown A logistics engineer modifies the current
            systems breakdown for an aircraft and associated support equipment on the basis of
            results from a level of repair analysis. "
418,SystemElement,"A SystemElement is a specialization of BreakdownElement that identifies
            the elements in one or more SystemBreakdown instances. "
419,SystemElementDefinition,"A SystemElementDefinition is a specialization of
            BreakdownElementDefinition that identifies a view of a version ( SystemElementVersion)
            of a SystemElement. The collision avoidance system element of a system breakdown is
            subject to a level of repair analysis to support implementation of optimized maintenance
            for an aircraft. "
420,SystemElementUsage,"A SystemElementUsage is a specialization of BreakdownElementUsage that
            is a relationship between a SystemElementDefinition and another SystemElementDefinition
            that is a constituent. In a system breakdown, the fuel system might include a fuel
            storage system and a fuel injection system as components. "
421,SystemElementVersion,"A SystemElementVersion is a specialization of BreakdownElementVersion
            that identifies a version of a SystemElement A sound engineer changes the details
            describing the public address system that is an element in a system breakdown of an
            aircraft. "
422,SystemVersion,"A SystemVersion is a specialization of ProductVersion that represents a
            particular version of a system. NOTE: In this case, this means ""revision"". So for a
            given system (e.g. a fuel injection system) we may have several versions of the system
            design (e.g. v1, v1.1 etc.) "
423,SystemVersionRelationship,"A SystemVersionRelationship is a specialization of
            ProductVersionRelationship used to relate versions of a system. "
424,SystemVersionSequence,"A SystemVersionSequence is a specialization of SystemVersionRelationship
            used to relate a previous version of a system to the version that replaces it.
         "
425,SystemViewDefinition,"A SystemViewDefinition is a specialization of ProductViewDefinition that
            provides a view of a system version relevant for one or more application domains.
         "
426,TaskElement,"A TaskElement is a specialization of ActivityMethod. It is a
            representation of all or part of how to undertake a task. "
427,TaskElementAssignment," A TaskElementAssignment is a specialization of an AssignmentObject that
            represents the assignment of TaskElement instances to instances that are specializations
            of TaskAssignmentSelect. NOTE: The meaning of the assignment is determined by
            classification which is identified by the AssignmentObject property. The possible
            classifications are subclasses of . "
428,TaskElementLevels,"A TaskElementLevels is a type of TaskElement that provides two or more
            different descriptions in place of a single method. The actual work will be the same
            whichever alternative TaskElement is followed. NOTE: This can be used to provide
            different levels of description of a task for people with varying levels of experience
            or expertise. "
429,TaskElementRelationship,"A TaskElementRelationship is a specialization of
            ActivityMethodRelationship. It relates two instances of TaskElement. Can be used to
            capture a time dependency that cuts across the structure of the method.
         "
430,TaskElementSequence,"A TaskElementSequence is a specialization of TaskElement that comprises
            a sequence of steps to be followed in a specified order. "
431,TaskElementStateRelationship,"A TaskElementStateRelationship is an type of ActivityMethodRelationship.
            It is an association between a State or a StateDefinition and a TaskElement. The meaning
            of the entity is determined by classification. Candidate meanings include: assumed
            starting state; required starting state. "
432,TaskInvocation,"A TaskInvocation is a type of TaskElement. It is an instruction to
            perform another task. A TaskElement calls a predefined task to perform an instrument
            calibration. "
433,TaskMethod,"A TaskMethod is a specialization of ActivityMethod. It is a
            specification of work. NOTE: The task method may be implemented using people, machines
            or a combination. "
434,TaskMethodAssignment," A TaskMethodAssignment is a specialization of an AssignmentObject that
            represents the assignment of TaskMethod instances to instances that are specializations
            of TaskAssignmentSelect. NOTE: The meaning of the assignment is determined by
            classification which is identified by the AssignmentObject property. The possible
            classifications are subclasses of . "
435,TaskMethodRelationship," A TaskMethodRelationship is a specialization of
            ActivityMethodRelationship. It relates two task methods. NOTE: The meaning of the
            relationship is determined by classification which is identified by the
            RelationshipObject property. The possible classifications are subclasses of .
         "
436,TaskMethodStateRelationship," A TaskMethodStateRelationship is a relationship between a state and a
            TaskMethod. NOTE: The meaning of the entity is determined by classification. Candidate
            meanings include: Assumed starting state; Required starting state. "
437,TaskMethodVersion,"A TaskMethodVersion is a specialization of ActivityMethod which allows
            the explicit reference to versions of a TaskMethodand to track changes against a
            TaskMethod. "
438,TaskMethodVersionAssignment," A TaskMethodVersionAssignment is a specialization of an
            AssignmentObject that represents the assignment of TaskMethodVersion instances to
            instances that are specializations of TaskAssignmentSelect. NOTE: The meaning of the
            assignment is determined by classification which is identified by the AssignmentObject
            property. The possible classifications are subclasses of . "
439,TaskMethodVersionRelationship,"A TaskMethodVersionRelationship is a specialization of
            ActivityMethodRelationship. It relates two instances of TaskMethodVersion.
         "
440,TaskObjective,"A TaskObjective is a result or objective that is reached by undertaking
            a TaskMethod. NOTE: More than one TaskMethod may be defined for a given objective, if
            there can be several ways to accomplish the objective. "
441,TaskObjectiveStateRelationship,"A TaskObjectiveStateRelationship is a relationship between a state and a
            TaskObjective. NOTE: The meaning of the entity is determined by classification.
            Candidate meanings include: Intended finishing state; Alternative finishing state.
         "
442,TaskStep,"A TaskStep is a specialization of TaskElement that is not further
            sub-divided. "
443,TimeInterval,"A TimeInterval is the identification of an intervening time.
         "
444,TimeIntervalAssignment,"A TimeIntervalAssignment is an association of a TimeInterval with
            product data. "
445,TimeIntervalEffectivity,"A TimeIntervalEffectivity is a specialization of Effectivity for which
            the domain of applicability is defined as a TimeInterval. "
446,TimeIntervalRelationship,"A TimeIntervalRelationship is the association of two instances of
            TimeInterval. The meaning of this association is specified in the
            TimeIntervalRelationship attribute. "
447,TimeIntervalWithBounds," A TimeIntervalWithBounds is a specialization of TimeInterval. A
            TimeIntervalWithBounds is bounded either on one side or both sides. If neither
            secondaryBound nor NumericalValue by the durationFromPrimaryBound are specified, the
            time interval begins at the point in time identified by primaryBound and has no
            specified end point. "
448,TracingRelationship," A TracingRelationship is a specialization of ViewDefinitionRelationship
            that shows tracing from ( TracingRelationship) one requirement to another (
            TracingRelationship). A requirement on the performance of a catalytic converter in a car
            may be traced from a more general emissions requirement. A requirement may trace to many
            other requirements and vice versa - this is achieved by creating multiple instances of
            the tracing relationship entity. NOTE: The inherited "" ViewDefinitionRelationship"" and ""
            ViewDefinitionRelationship"" attributes have been renamed for purposes of clarity. NOTE:
            Properties may be attached to tracing relationships. This is intended to deal with ""user
            defined"" attributes which are common on tracing relationships in requirements tools.
         "
449,TypeOfPerson,"A TypeOfPerson is a type of person. Class 3 welder Truck driver
            Electronics engineer Mechanical technician Helicopter pilot "
450,TypeOfPersonAssignment,"A TypeOfPersonAssignment is the association of a TypeOfPerson in a role
            with an activity or product data. "
451,TypeOfPersonDefinition,"A TypeOfPersonDefinition is the definition of a TypeOfPerson in terms of
            required properties or attributes. A junior mechanical design engineer could be
            specified to be either someone who has 3 years experience of working in a mechanical
            design department, or a degree in mechanical engineering. "
452,TypeOfPersonDefinitionRelationship," A TypeOfPersonDefinitionRelationship is a relationship between two
            definitions of a type of person (TypeOfPersonDefinition). A
            TypeOfPersonDefinitionRelationship is a specialization of a RelationshipObject that is a
            relationship between two instances of a type of person (TypeOfPersonDefinition).
            ""alternate"" and ""superceded by"" are examples of TypeOfPersonDefinitionRelationships.
            NOTE: The meaning of the relationship is determined by classification which is
            identified by the RelationshipObject property. The possible classifications are
            subclasses of . "
453,TypeOfPersonDefinitionRequiredAttributesRelationship,"A TypeOfPersonDefinitionRequiredAttributesRelationship is a relationship
            between a TypeOfPersonDefinition and the attributes required to define that type of
            person. The type of person ""van driver"" is required to possess the qualification named
            ""commercial driving license"" or the experience level ""3 years of driving more than
            10,000 miles per year"". "
454,UncertaintyQualifier,"An UncertaintyQualifier is a generalization of a StandardUncertainty or
            a QualitativeUncertainty. The uncertainty is defined in clause 2 of ""The Guide to the
            Expression of Uncertainty in Measurement"". "
455,Validation,"A Validation is a subjective assertion that an item is ""fit for
            purpose"". Evidence used in this validation is identified by the inverse attribute
            validatedBy. Validation is commonly understood to mean ""Have we built the right
            system?"". Validation is concerned with ensuring that the system will meet the customerâs
            objectives and expectations. Validation usually includes testing under normal usage
            conditions. NOTE: An item may pass validation even though some requirements fail
            verification. NOTE: It is assumed that meta data supporting the validation will be
            applied using assignment entities, such as identification assignment, person and
            organization assignment etc.. Every flight of every Space Shuttle has been a
            ""Validation"" flight to test the new design under actual conditions. No two shuttles have
            flown in the same configuration and many systems cannot be validated except under actual
            conditions. "
456,ValueFunction,"A ValueFunction is a numerically defined function that describes the
            distribution function. "
457,ValueLimit,"A ValueLimit is a specialization of NumericalValue that specifies a
            qualified numerical value representing either the lower limit or the upper limit of a
            particular quantifiable characteristic. "
458,ValueList,"A ValueList is a specialization of PropertyValue that is an ordered
            collection of PropertyValues. A PropertyValue may be composed of different values such
            as 'mass', 'speed', and 'age' which are all necessary in a given context. The ValueList
            collects all of them in a given order, such that each is identifiable by its index in
            the list. "
459,ValueRange,"A ValueRange is a specialization of ValueWithUnit that is a pair of
            numbers representing the range in which the value shall lie. "
460,ValueSet,"A ValueSet is a specialization of PropertyValue that is an unordered
            collection of PropertyValues. A PropertyValue may be composed of different values such
            as 'mass', 'speed', and 'age' which are all necessary in a given context. The ValueSet
            collects all of them in a given order, such that each is identifiable by its index in
            the list. "
461,ValueWithTolerances,"A ValueWithTolerances is a specialization of ValueWithUnit that
            specifies a range of values by specifying a single nominal value and two tolerances that
            are offsets from the single value. The range is defined to be the closed interval [item
            value + lower limit, item value + upper limit]. "
462,ValueWithUnit," A ValueWithUnit is a specialization of a PropertyValue and is an
            abstract generalization of instances that represents the specification of a physical
            quantity by its value and its unit. NOTE: Only non-abstract specializations of the
            ValueWithUnit can be instantiated. "
463,Verification,"A Verification is an objective assertion of a claim that requirement is
            satisfied by a particular item represented in a RequirementSatisfiedBy has been
            verified. The evidence used in this verification is identified by the inverse attribute
            verifiedBy. Verification is commonly understood to mean ""Have we built the system
            right?"". Verification ensures that the specified requirements have been met.
            Verification uses the methods of Test, Analysis, Inspection, Demonstration, Similarity.
            NOTE: Just because an item is verified does not ensure that it meets all stakeholder
            needs or expectations, many of these are never specified are of an un-testable nature
            e.g. ""the car should look sporty"". NOTE: It is assumed that meta data supporting the
            verification will be applied using assignment entities, such as identification
            assignment, person and organization assignment etc.. A data type used to represent a
            vehicle's engine with a power output of 160BHP could be asserted to satisfy a
            requirement ""the vehicle shall have a maximum power output of at least 150BHP"". This
            assertion may be verified by analysis results on simulations of the engine. In this case
            the analysis results would be identified in the items collection of an evidence
            instance, possibly including the approval of the analysis. The evidence instance would
            identify that it is used to support the required verification. "
464,VerificationRelationship," A VerificationRelationship is an association between two verifications.
            NOTE: The meaning of the relationship is determined by classification which is
            identified by the RelationshipObject property. The possible classifications are
            subclasses of . "
465,ViewDefinitionContext," An ViewDefinitionContext is the grouping of an application domain and a
            life cycle stage. It identifies a universe of discourse suitable for the description of
            products. NOTE: Requirements and vocabularies vary among the industrial activity fields.
            This entity intends to identify such a domain. "
466,ViewDefinitionRelationship,"A ViewDefinitionRelationship is an association between two instances of
            ProductViewDefinition. This association represents a relationship between the product
            versions, indirectly identified by the instances of ProductViewDefinition, relevant in
            the definition contexts of the related instances of ProductViewDefinition.
         "
467,ViewDefinitionUsage,"A ViewDefinitionUsage is a specialization of ViewDefinitionRelationship
            that specifies a directed association between two instances of ProductViewDefinition.
            This association represents a relationship stating that, in the definition contexts of
            the related instances of ProductViewDefinition, it is considered that the related
            product is used in the context of the relating product. "
468,WorkOrder," A WorkOrder is an authoritative instrument which provides directions to
            achieve the specified results. A WorkOrder is the authorization for one or more Activity
            instances to be performed. "
469,WorkOrderAssignment,"An WorkOrderAssignment is an association of a WorkOrder with the product
            or activity data that are subjects of this WorkOrder. In case a tyre on a car is flat, a
            WorkOrder may be created and associated with the instances that represent the tyre that
            is flat, the car and the spare wheel. "
470,WorkOutput,"A WorkOutput is a statement of output resulting from an activity or a
            task. The role of the work output is determined by classification. When applicable a
            work output may be classified as ""Planned""; ""Actual""; ""By-product""; ""Waste product"".
         "
471,WorkOutputAssignment,"A WorkOutputAssignment is an association of a work output statement with
            the source that produces or delivers the output. The work output can be planned as well
            as actual. The role of the assignment is determined by classification.
         "
472,WorkOutputRelationship,"A WorkOutputRelationship is a relationship between two work output
            statements. The meaning of the relationship is determined by classification. A
            WorkOutputRelationship is classified as ""realized by"" . "
473,WorkRequest,"A WorkRequest is the solicitation for some work to be done. NOTE: These
            requests may not be acted upon depending on the authorization granted to the request or
            its associated WorkOrder. "
474,WorkRequestAssignment,"An WorkRequestAssignment is an association of a WorkRequest with the
            product or activity data that are subjects of this WorkRequest. In case a tyre on a car
            is flat, a WorkRequest may be created and associated with the instances that represent
            the tyre that is flat, the car and the spare wheel. "
475,WorkRequestRelationship," AWorkRequestRelationship is a specialization of an RelationshipObject
            that is a relationship between two instances of WorkRequest. NOTE: The meaning of the
            relationship is determined by classification which is identified by the
            RelationshipObject property. The possible classifications are subclasses of .
         "
476,XorStateCauseEffectDefinition,"An XorStateCauseEffectDefinition is a specialization of
            StateCauseEffectDefinition. It relates one of the single or many causing state
            definition(s) and one effect StateDefinition, whereby any and only one of the causing
            state definitions exists prior to the single effect to take place. "
477,ZoneBreakdown,"A ZoneBreakdown is a specialization of Breakdown that identifies a
            partitioning of a product into a set of related zonal elements so as to form explicit,
            parent-child views that comprise the product elements. The parent-child view is
            represented by ZoneElementUsage instances relating the zonal elements in the breakdown
            which are represented by ZoneElements. A zonal breakdown provides a means of identifying
            the decomposition of an aircraft in terms of spaces or high-level conceptual parts such
            as 'wing' - which might further decompose into lower-level zones such as 'inner-wing',
            and 'outer wing'. "
478,ZoneBreakdownContext,"A ZoneBreakdownContext is a specialization of BreakdownContext that is a
            membership relationship between a ZoneElement and a ZoneBreakdown of which the zonal
            element is a member. A 'fire-check zone' might be a member of the zonal breakdown of a
            building. "
479,ZoneBreakdownVersion,"A ZoneBreakdownVersion is a specialization of BreakdownVersion that
            identifies a version of a ZoneBreakdown An architect modifies the current fire-check
            zone breakdown for an building on the basis of reports from a buildings inspector.
         "
480,ZoneElement,"A ZoneElement is a specialization of BreakdownElement that identifies
            the elements in one or more ZoneBreakdown instances. 'Empennage', 'Right vertical
            stabilizer and rudder' and 'Lower rudder' are all elements in a zonal breakdown of an
            aircraft. "
481,ZoneElementDefinition,"A ZoneElementDefinition is a specialization of
            BreakdownElementDefinition that identifies a view of a version ( ZoneElementVersion) of
            a ZoneElement. For an aircraft, an element 'Right vertical stabilizer tip' is in a zonal
            breakdown that an engineer uses for reliability-centred maintenance analysis.
         "
482,ZoneElementUsage,"A ZoneElementUsage is a specialization of BreakdownElementUsage that is
            a relationship between a parent and child ZoneElement. In a zonal breakdown, the 'wing'
            (parent) might include (as children) an 'inner wing' and an 'outer wing'.
         "
483,ZoneElementVersion,"A ZoneElementVersion is a specialization of BreakdownElementVersion that
            identifies a version of a ZoneElement. An engineer defines an inspection task on a
            breakdown element 'Upper rudder' that is part of a zonal breakdown of an aircraft. The
            engineer identifies the corresponding view of the breakdown element.
         "
